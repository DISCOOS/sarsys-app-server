syntax = "proto3";

option java_multiple_files = true;
option java_package = "app.sarsys.tracking";
option java_outer_classname = "SarSysTrackingService";

package app.sarsys.tracking;

import "event.proto";
import "repository.proto";


// Interface exported by the server.
service SarSysTrackingService {

  // Get tracking service metadata
  //
  // Obtains metadata from tracking service
  rpc GetMeta(GetTrackingMetaRequest) returns (GetTrackingMetaResponse) {}

  // Start tracking service
  //
  // Service will start processing
  // device position changes and competing
  // for new tracking object
  rpc start(StartTrackingRequest) returns (StartTrackingResponse) {}

  // Stop tracking service
  //
  // Service will stop processing
  // device position changes and competing
  // for new tracking object
  rpc stop(StopTrackingRequest) returns (StopTrackingResponse) {}

  // Add tracking objects to service
  //
  // Service will start managing given tracking objects
  rpc AddTrackings(AddTrackingsRequest) returns (AddTrackingsResponse) {}

  // Remove tracking objects from service
  //
  // Service will stop managing given tracking objects
  rpc RemoveTrackings(RemoveTrackingsRequest) returns (RemoveTrackingsResponse) {}

}

enum TrackingServerStatus {
  // Default value
  TRACKING_STATUS_NONE = 0;
  // If build without starting
  TRACKING_STATUS_READY = 1;
  // Service is started
  TRACKING_STATUS_STARTED = 2;
  // Service is stopped (will not process any events)
  TRACKING_STATUS_STOPPED = 3;
  // Service is disposed (must be build to resume)
  TRACKING_STATUS_DISPOSED = 4;
}

// Add tracking object action request
//
// Service will start managing given tracking object
message AddTrackingsRequest {

  // Tracking object uuids
  repeated string uuids = 1;

  // Expand response with given fields
  repeated TrackingExpandFields expand = 2;

}

// Tracking objects action response
//
// Defines the tracking objects action result
message AddTrackingsResponse {

  // Tracking object uuids
  repeated string uuids = 1;

  // Tracking object that failed to add
  repeated string failed = 2;

  // Tracking object action status code
  int32 statusCode = 3;

  // Tracking object action status code reason
  string reasonPhrase = 4;

  // Tracking service medata object
  GetTrackingMetaResponse meta = 5;

}

// Start tracking service action request
//
// Service will start processing
// device position changes and competing
// for new tracking object
message StartTrackingRequest {

  // Expand response with given fields
  repeated TrackingExpandFields expand = 2;

}

// Start tracking service action response
//
// Defines the start tracking service action result
message StartTrackingResponse {

  // Tracking object uuids
  repeated string uuids = 1;

  // Tracking service action status code
  int32 statusCode = 3;

  // Tracking service action status code reason
  string reasonPhrase = 4;

  // Tracking service medata object
  GetTrackingMetaResponse meta = 5;

}

// Stop tracking service
//
// Service will stop processing
// device position changes and competing
// for new tracking object
message StopTrackingRequest {

  // Expand response with given fields
  repeated TrackingExpandFields expand = 2;

}

// Start tracking service action response
//
// Defines the stop tracking service action result
message StopTrackingResponse {

  // Tracking object uuids
  repeated string uuids = 1;

  // Tracking service action status code
  int32 statusCode = 3;

  // Tracking service action status code reason
  string reasonPhrase = 4;

  // Tracking service medata object
  GetTrackingMetaResponse meta = 5;

}

// Remove tracking objects action request
//
// Service will stop managing given tracking objects
message RemoveTrackingsRequest {

  // Tracking object uuids
  repeated string uuids = 1;

  // Expand response with given fields
  repeated TrackingExpandFields expand = 2;

}

// Remove tracking objects action response
//
// Defines remove trackings object action result
message RemoveTrackingsResponse {

  // Tracking object uuids
  repeated string uuids = 1;

  // Tracking object that failed to remove
  repeated string failed = 2;

  // Tracking object action status code
  int32 statusCode = 3;

  // Tracking object action status code reason
  string reasonPhrase = 4;

  // Tracking service medata object
  GetTrackingMetaResponse meta = 5;

}

// Tracking Service metadata request
//
// Summarises tracking service data
message GetTrackingMetaRequest {

  // Expand response with given fields
  repeated TrackingExpandFields expand = 1;

}

// Tracking Service metadata response
//
// Summarises tracking service metadata
message GetTrackingMetaResponse {

  // Current tracking service status
  TrackingServerStatus status = 1;

  // Trackings metadata
  TrackingsMeta trackings = 2;

  // Positions metadata
  PositionsMeta positions = 3;

  // List of metadata for managed tracking objects
  repeated TrackingMeta managerOf = 4;

  // Map of repository metadata
  org.discoos.es.RepositoryMeta repo = 5;

}

enum TrackingExpandFields {

  // Only return default fields
  TRACKING_EXPAND_FIELDS_NONE = 0;

  // Return all available fields
  TRACKING_EXPAND_FIELDS_ALL = 1;

  // Extend response with repository field
  TRACKING_EXPAND_FIELDS_REPO = 2;

  // Extend response with repository metadata items field
  TRACKING_EXPAND_FIELDS_REPO_ITEMS = 3;

  // Extend response with repository metadata data fields
  TRACKING_EXPAND_FIELDS_REPO_DATA = 4;

  // Extend response with repository metadata metrics field
  TRACKING_EXPAND_FIELDS_REPO_METRICS = 5;

  // Extend response with repository metadata queue field
  TRACKING_EXPAND_FIELDS_REPO_QUEUE = 6;

//  // Extend response with repository metadata connection field
//  TRACKING_EXPAND_FIELDS_REPO_CONN = 7;
//
//  // Extend response with repository metadata subscriptions field
//  TRACKING_EXPAND_FIELDS_REPO_SUBS = 8;
//
//  // Extend response with repository metadata snapshot field
//  TRACKING_EXPAND_FIELDS_REPO_SNAPSHOT = 9;

}


// Tracking object metadata
//
// Summarises tracking object metadata
message TrackingMeta {

  // Tracking uuid
  string uuid = 1;

  // Number of tracks in tracking object
  int64 trackCount = 2;

  // Total number of positions in tracking object
  int64 positionCount = 3;

  // Last applied tracking event
  org.discoos.es.EventMeta lastEvent = 4;

}

// Trackings metadata
//
// Summarises trackings metadata
message TrackingsMeta {

  // Total number of tracking objects heard
  int64 total = 1;

  // Number of managed tracking object to total number of tracking objects
  double fractionManaged = 2;

  // Number of tracking events processed per minute
  double eventsPerMinute = 3;

  // Average processing time in milliseconds
  int32 averageProcessingTimeMillis = 4;

  // Last applied tracking event
  org.discoos.es.EventMeta lastEvent = 5;

}

// Positions metadata
//
// Summarises positions metadata
message PositionsMeta {

  // Total number of positions heard
  int64 total = 1;

  // Number of positions processed per minute
  double eventsPerMinute = 2;

  // Average processing time in milliseconds
  int32 averageProcessingTimeMillis = 3;

  // Last applied position event
  org.discoos.es.EventMeta lastEvent = 4;

}




