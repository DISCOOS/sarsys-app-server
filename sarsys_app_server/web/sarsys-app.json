{"openapi":"3.0.0","info":{"title":"SarSys App Server","description":"SARSys App Server consumed by SarSys apps","version":"0.0.1"},"servers":[{"url":"https://sarsys.app"},{"url":"http://localhost"}],"paths":{"/api/{path}":{"parameters":[{"name":"path","description":"This path variable may contain slashes '/' and may be empty.","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["System"],"summary":"Returns the contents of a file on the server's filesystem.","description":"Content-Type is determined by the suffix of the file.","operationId":"getFile","responses":{"200":{"description":"Successful file fetch.","content":{"*/*":{"schema":{"type":"string","format":"binary"}}}},"404":{"description":"No file exists at path."}}}},"/api/healthz/alive":{"parameters":[],"get":{"tags":["System"],"operationId":"check","parameters":[],"responses":{"200":{"description":"Successful response."}}}},"/api/healthz/ready":{"parameters":[],"get":{"tags":["System"],"operationId":"check","parameters":[],"responses":{"200":{"description":"Successful response."}}}},"/api/messages/connect":{"parameters":[]},"/api/repositories/{type}":{"parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["System"],"summary":"Get Repository metadata","description":"Get Repository metadata.","operationId":"getRepoMeta","parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","required":false,"allowEmptyValue":false,"schema":{"type":"string"}},{"name":"expand","description":"Expand response with metadata. Legal values are: 'data', 'queue', 'items', 'metrics', 'snapshot', 'connection', 'subscriptions'","in":"query"}],"responses":{"200":{"description":"Successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RepositoryMeta"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"416":{"$ref":"#/components/responses/416"},"429":{"$ref":"#/components/responses/429"},"500":{"$ref":"#/components/responses/503"},"503":{"$ref":"#/components/responses/503"},"504":{"$ref":"#/components/responses/504"}}},"post":{"tags":["System"],"summary":"Execute command on Repository","description":"Execute command on Repository.","operationId":"repoCommand","parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","required":false,"allowEmptyValue":false,"schema":{"type":"string"}}],"requestBody":{"description":"Repository Command Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RepositoryCommand"}}}},"responses":{"200":{"description":"Successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RepositoryMeta"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"416":{"$ref":"#/components/responses/416"},"429":{"$ref":"#/components/responses/429"},"500":{"$ref":"#/components/responses/503"},"503":{"$ref":"#/components/responses/503"},"504":{"$ref":"#/components/responses/504"}}}},"/api/aggregates/{type}/{uuid}":{"parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}},{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["System"],"summary":"Get Aggregate metadata","description":"Get Aggregate metadata.","operationId":"getAggregateMeta","parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}},{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","required":false,"allowEmptyValue":false,"schema":{"type":"string"}},{"name":"expand","description":"Expand response with metadata. Legal values are: 'data', 'items'","in":"query"}],"responses":{"200":{"description":"Successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AggregateMeta"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"416":{"$ref":"#/components/responses/416"},"429":{"$ref":"#/components/responses/429"},"500":{"$ref":"#/components/responses/503"},"503":{"$ref":"#/components/responses/503"},"504":{"$ref":"#/components/responses/504"}}},"post":{"tags":["System"],"summary":"Execute command on Aggregate","description":"Execute command on Aggregate.","operationId":"aggregateCommand","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"type","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","required":false,"allowEmptyValue":false,"schema":{"type":"string"}}],"requestBody":{"description":"Aggregate Command Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AggregateCommand"}}}},"responses":{"200":{"description":"Successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AggregateMeta"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"416":{"$ref":"#/components/responses/416"},"429":{"$ref":"#/components/responses/429"},"500":{"$ref":"#/components/responses/503"},"503":{"$ref":"#/components/responses/503"},"504":{"$ref":"#/components/responses/504"}}}},"/api/snapshots/{type}":{"parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["System"],"summary":"Get Snapshot metadata","description":"Get Snapshot metadata.","operationId":"getSnapshotsMeta","parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","required":false,"allowEmptyValue":false,"schema":{"type":"string"}},{"name":"expand","description":"Expand response with metadata. Legal values are: 'data', 'items'","in":"query"}],"responses":{"200":{"description":"Successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SnapshotMeta"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"416":{"$ref":"#/components/responses/416"},"429":{"$ref":"#/components/responses/429"},"500":{"$ref":"#/components/responses/503"},"503":{"$ref":"#/components/responses/503"},"504":{"$ref":"#/components/responses/504"}}},"post":{"tags":["System"],"summary":"Execute command on Snapshot","description":"Execute command on Snapshot.","operationId":"repoCommand","parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","required":false,"allowEmptyValue":false,"schema":{"type":"string"}}],"requestBody":{"description":"Snapshot Command Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SnapshotCommand"}}}},"responses":{"200":{"description":"Successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SnapshotMeta"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"416":{"$ref":"#/components/responses/416"},"429":{"$ref":"#/components/responses/429"},"500":{"$ref":"#/components/responses/503"},"503":{"$ref":"#/components/responses/503"},"504":{"$ref":"#/components/responses/504"}}}},"/api/snapshots/{type}/upload":{"parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}}],"post":{"tags":["System"],"summary":"Upload snapshot file as multipart/form-data","description":"Upload snapshot file as multipart/form-data.","operationId":"upload","parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","required":false,"allowEmptyValue":false,"schema":{"type":"string"}}],"requestBody":{"description":"Snapshot file data posted as multipart/form-data","required":true,"content":{"application/json":{"schema":{"type":"string","format":"binary"}}}},"responses":{"200":{"description":"Successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SnapshotMeta"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"416":{"$ref":"#/components/responses/416"},"429":{"$ref":"#/components/responses/429"},"500":{"$ref":"#/components/responses/503"},"503":{"$ref":"#/components/responses/503"},"504":{"$ref":"#/components/responses/504"}}},"get":{"tags":["System"],"summary":"Download snapshot file data","description":"Download snapshot file data.","operationId":"download","parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","description":"Expand response with metadata. Legal values are: 'data', 'items'","in":"query"}],"responses":{"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"string","description":"Snapshot file data","format":"binary"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"416":{"$ref":"#/components/responses/416"},"429":{"$ref":"#/components/responses/429"},"500":{"$ref":"#/components/responses/503"},"503":{"$ref":"#/components/responses/503"},"504":{"$ref":"#/components/responses/504"}}}},"/api/snapshots/{type}/download":{"parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}}],"post":{"tags":["System"],"summary":"Upload snapshot file as multipart/form-data","description":"Upload snapshot file as multipart/form-data.","operationId":"upload","parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","required":false,"allowEmptyValue":false,"schema":{"type":"string"}}],"requestBody":{"description":"Snapshot file data posted as multipart/form-data","required":true,"content":{"application/json":{"schema":{"type":"string","format":"binary"}}}},"responses":{"200":{"description":"Successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SnapshotMeta"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"416":{"$ref":"#/components/responses/416"},"429":{"$ref":"#/components/responses/429"},"500":{"$ref":"#/components/responses/503"},"503":{"$ref":"#/components/responses/503"},"504":{"$ref":"#/components/responses/504"}}},"get":{"tags":["System"],"summary":"Download snapshot file data","description":"Download snapshot file data.","operationId":"download","parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","description":"Expand response with metadata. Legal values are: 'data', 'items'","in":"query"}],"responses":{"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"string","description":"Snapshot file data","format":"binary"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"416":{"$ref":"#/components/responses/416"},"429":{"$ref":"#/components/responses/429"},"500":{"$ref":"#/components/responses/503"},"503":{"$ref":"#/components/responses/503"},"504":{"$ref":"#/components/responses/504"}}}},"/api/app-configs":{"parameters":[],"get":{"tags":["Tenant"],"summary":"Get all app configs","description":"Get all app configs. This operation is only allowed for admin users.","operationId":"getAll","parameters":[{"name":"offset","description":"Start with app config number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of app config to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"AppConfig Type","default":"AppConfig","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/AppConfig"}},"description":"AppConfig Response","readOnly":true},"description":"Array of AppConfigs","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Tenant"],"summary":"Create app config","description":"Create app config. The field [uuid] MUST BE unique for each application. Use a OS-spesific device id or a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New AppConfig Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppConfig"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/app-configs/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Tenant"],"summary":"Get app config","description":"Get app config. A configuration is unique for each application regardless of which user is logged in.","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"AppConfig Type","default":"AppConfig","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/AppConfig"}},"description":"AppConfig Response","readOnly":true}}}}}},"patch":{"tags":["Tenant"],"summary":"Update app config","description":"Update app config. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update AppConfig Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppConfig"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Tenant"],"summary":"Delete app config","description":"Delete app config. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/persons":{"parameters":[],"get":{"tags":["Persons"],"summary":"Get all persons","description":"Get all persons. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with person number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of person to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Person Type","default":"Person","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Person"}},"description":"Person Response","readOnly":true},"description":"Array of Persons","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Persons"],"summary":"Create person","description":"Create person. The field [uuid] MUST BE unique for each Person. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New Person Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Person"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/persons/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Persons"],"summary":"Get person","description":"Get person. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Person Type","default":"Person","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Person"}},"description":"Person Response","readOnly":true}}}}}},"patch":{"tags":["Persons"],"summary":"Update person","description":"Update person. Only fields in request are applied to Person. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Person Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Person"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Persons"],"summary":"Delete person","description":"Delete person. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/affiliations":{"parameters":[],"get":{"tags":["Affiliations"],"summary":"Get all affiliations","description":"Get all affiliations. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with affiliation number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of affiliation to fetch. Default is 20.","in":"query"},{"name":"filter","description":"Match values against given filter","in":"query"},{"name":"uuids","description":"Only get aggregates in list of given comma-separated uuids. If filter is given, it is only applied on aggregates matching any uuids","in":"query"},{"name":"expand","description":"Expand response with information from references. Legal values are: 'person'","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Affiliation Type","default":"Affiliation","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Affiliation"}},"description":"Affiliation Response","readOnly":true},"description":"Array of Affiliations","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Affiliations"],"summary":"Create affiliation","description":"Create affiliation. The field [uuid] MUST BE unique for each Affiliation. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New Affiliation Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Affiliation"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/affiliations/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Affiliations"],"summary":"Get affiliation","description":"Get affiliation. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","required":false,"allowEmptyValue":false,"schema":{"type":"string"}},{"name":"filter","description":"Match values against given filter","in":"query"},{"name":"uuids","description":"Only get aggregates in list of given comma-separated uuids. If filter is given, it is only applied on aggregates matching any uuids","in":"query"},{"name":"expand","description":"Expand response with information from references. Legal values are: 'person'","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Affiliation Type","default":"Affiliation","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Affiliation"}},"description":"Affiliation Response","readOnly":true}}}}}},"patch":{"tags":["Affiliations"],"summary":"Update affiliation","description":"Update affiliation. Only fields in request are applied to Affiliation. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Affiliation Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Affiliation"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Affiliations"],"summary":"Delete affiliation","description":"Delete affiliation. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/affiliations/onboard":{"parameters":[],"post":{"tags":["Affiliations > Onboard"],"summary":"Create affiliation","description":"Create affiliation. The field [uuid] MUST BE unique for each Affiliation. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"Onboard Affiliation Request","required":true,"content":{"application/json":{"schema":{"required":["person","affiliation"],"type":"object","properties":{"person":{"$ref":"#/components/schemas/Person"},"affiliation":{"$ref":"#/components/schemas/Affiliation"}}}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/incidents":{"parameters":[],"get":{"tags":["Incidents"],"summary":"Get all incidents","description":"Get all incidents. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with incident number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of incident to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Incident Type","default":"Incident","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Incident"}},"description":"Incident Response","readOnly":true},"description":"Array of Incidents","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Incidents"],"summary":"Create incident","description":"Create incident. The field [uuid] MUST BE unique for each Incident. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New Incident Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Incident"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/incidents/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Incidents"],"summary":"Get incident","description":"Get incident. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Incident Type","default":"Incident","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Incident"}},"description":"Incident Response","readOnly":true}}}}}},"patch":{"tags":["Incidents"],"summary":"Update incident","description":"Update incident. Only fields in request are applied to Incident. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Incident Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Incident"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Incidents"],"summary":"Delete incident","description":"Delete incident. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/incidents/{uuid}/subjects":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Incidents > Subjects"],"summary":"Get all subjects","description":"Get all subjects","operationId":"getSubjects","parameters":[{"name":"uuid","description":"Incident uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"offset","description":"Start with subject number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of subject to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Subject"}}}}}}},"post":{"tags":["Incidents > Subjects"],"summary":"Create subject and add uuid to subjects in Incident","description":"Create subject and add uuid to subjects in Incident. Ids MUST BE unique for each subject. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createSubjects","parameters":[{"name":"uuid","description":"Incident uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Subject","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subject"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/incidents/{uuid}/clues":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Incidents > Clues"],"summary":"Get all clues","description":"Get all clues. ","operationId":"getAllClue","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"Clue","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"Clue Page offset","readOnly":true},"limit":{"type":"integer","description":"Clue Page size","readOnly":true},"next":{"type":"integer","description":"Next Clue Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/Clue"},"description":"Array of Clues","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Incidents > Clues"],"summary":"Create clue","description":"Create clue. The field [id] MUST BE unique for each Clue. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createClue","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Clue Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Clue"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/incidents/{uuid}/clues/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Incidents > Clues"],"summary":"Get clue","description":"Get clue. ","operationId":"getByIdClue","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Clue Type","default":"Clue","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Clue"}},"description":"Clue Response","readOnly":true}}}}}},"patch":{"tags":["Incidents > Clues"],"summary":"Update clue","description":"Update clue. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"updateClue","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Clue Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Clue"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Incidents > Clues"],"summary":"Delete clue","description":"Delete clue. ","operationId":"deleteClue","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/incidents/{uuid}/messages":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Incidents > Messages"],"summary":"Get all messages","description":"Get all messages. ","operationId":"getAllMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"Message","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"Message Page offset","readOnly":true},"limit":{"type":"integer","description":"Message Page size","readOnly":true},"next":{"type":"integer","description":"Next Message Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"Array of Messages","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Incidents > Messages"],"summary":"Create message","description":"Create message. The field [id] MUST BE unique for each Message. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Message Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/incidents/{uuid}/messages/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Incidents > Messages"],"summary":"Get message","description":"Get message. ","operationId":"getByIdMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Message Type","default":"Message","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Message"}},"description":"Message Response","readOnly":true}}}}}},"patch":{"tags":["Incidents > Messages"],"summary":"Update message","description":"Update message. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"updateMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Message Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Incidents > Messages"],"summary":"Delete message","description":"Delete message. ","operationId":"deleteMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/incidents/{uuid}/operations":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Incidents > Operations"],"summary":"Get all operations","description":"Get all operations","operationId":"getOperations","parameters":[{"name":"uuid","description":"Incident uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"offset","description":"Start with operation number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of operation to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Operation"}}}}}}},"post":{"tags":["Incidents > Operations"],"summary":"Create operation and add uuid to operations in Incident","description":"Create operation and add uuid to operations in Incident. Ids MUST BE unique for each operation. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createOperations","parameters":[{"name":"uuid","description":"Incident uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Operation","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operation"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/subjects":{"parameters":[],"get":{"tags":["Subjects"],"summary":"Get all subjects","description":"Get all subjects. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with subject number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of subject to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Subject Type","default":"Subject","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Subject"}},"description":"Subject Response","readOnly":true},"description":"Array of Subjects","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}}},"/api/subjects/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Subjects"],"summary":"Get subject","description":"Get subject. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Subject Type","default":"Subject","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Subject"}},"description":"Subject Response","readOnly":true}}}}}},"patch":{"tags":["Subjects"],"summary":"Update subject","description":"Update subject. Only fields in request are applied to Subject. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Subject Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subject"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Subjects"],"summary":"Delete subject","description":"Delete subject. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/operations":{"parameters":[],"get":{"tags":["Operations"],"summary":"Get all operations","description":"Get all operations. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with operation number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of operation to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Operation Type","default":"Operation","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Operation"}},"description":"Operation Response","readOnly":true},"description":"Array of Operations","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}}},"/api/operations/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Operations"],"summary":"Get operation","description":"Get operation. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Operation Type","default":"Operation","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Operation"}},"description":"Operation Response","readOnly":true}}}}}},"patch":{"tags":["Operations"],"summary":"Update operation","description":"Update operation. Only fields in request are applied to Operation. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Operation Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operation"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Operations"],"summary":"Delete operation","description":"Delete operation. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/operations/{uuid}/objectives":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Operations > Objectives"],"summary":"Get all objectives","description":"Get all objectives. ","operationId":"getAllObjective","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"Objective","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"Objective Page offset","readOnly":true},"limit":{"type":"integer","description":"Objective Page size","readOnly":true},"next":{"type":"integer","description":"Next Objective Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/Objective"},"description":"Array of Objectives","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Operations > Objectives"],"summary":"Create objective","description":"Create objective. The field [id] MUST BE unique for each Objective. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createObjective","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Objective Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Objective"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/operations/{uuid}/objectives/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Operations > Objectives"],"summary":"Get objective","description":"Get objective. ","operationId":"getByIdObjective","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Objective Type","default":"Objective","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Objective"}},"description":"Objective Response","readOnly":true}}}}}},"patch":{"tags":["Operations > Objectives"],"summary":"Update objective","description":"Update objective. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"updateObjective","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Objective Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Objective"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Operations > Objectives"],"summary":"Delete objective","description":"Delete objective. ","operationId":"deleteObjective","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/operations/{uuid}/talkgroups":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Operations > Talkgroups"],"summary":"Get all talk groups","description":"Get all talk groups. ","operationId":"getAllTalkGroup","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"TalkGroup","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"TalkGroup Page offset","readOnly":true},"limit":{"type":"integer","description":"TalkGroup Page size","readOnly":true},"next":{"type":"integer","description":"Next TalkGroup Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/TalkGroup"},"description":"Array of TalkGroups","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Operations > Talkgroups"],"summary":"Create talk group","description":"Create talk group. The field [id] MUST BE unique for each TalkGroup. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createTalkGroup","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New TalkGroup Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TalkGroup"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/operations/{uuid}/talkgroups/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Operations > Talkgroups"],"summary":"Get talk group","description":"Get talk group. ","operationId":"getByIdTalkGroup","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"TalkGroup Type","default":"TalkGroup","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/TalkGroup"}},"description":"TalkGroup Response","readOnly":true}}}}}},"patch":{"tags":["Operations > Talkgroups"],"summary":"Update talk group","description":"Update talk group. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"updateTalkGroup","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update TalkGroup Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TalkGroup"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Operations > Talkgroups"],"summary":"Delete talk group","description":"Delete talk group. ","operationId":"deleteTalkGroup","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/operations/{uuid}/personnels":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Operations > Personnels"],"summary":"Get all personnels","description":"Get all personnels","operationId":"getPersonnels","parameters":[{"name":"uuid","description":"Operation uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"offset","description":"Start with personnel number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of personnel to fetch. Default is 20.","in":"query"},{"name":"filter","description":"Match values with given string","in":"query"},{"name":"uuids","description":"Only get aggregates in list of given comma-separated uuids. If filter is given, it is only applied on aggregates matching any uuids","in":"query"},{"name":"expand","description":"Expand response with information from references. Legal values are: 'person'","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Personnel"}}}}}}},"post":{"tags":["Operations > Personnels"],"summary":"Create personnel and add uuid to personnels in Operation","description":"Create personnel and add uuid to personnels in Operation. Ids MUST BE unique for each personnel. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createPersonnels","parameters":[{"name":"uuid","description":"Operation uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Personnel","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Personnel"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"patch":{"tags":["Operations > Personnels"],"summary":"Add personnel fuuids to personnels in Operation","description":"Add personnel fuuids to personnels in Operation. Ids MUST BE unique for each personnel. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"addPersonnels","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"List of Aggregate Root fuuids","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AggregateList"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Operations > Personnels"],"summary":"Remove personnel fuuids from personnels in Operation","description":"Remove personnel fuuids from personnels in Operation. Ids MUST BE unique for each personnel. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"removePersonnels","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"List of Aggregate Root fuuids","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AggregateList"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/operations/{uuid}/missions":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Operations > Missions"],"summary":"Get all missions","description":"Get all missions","operationId":"getMissions","parameters":[{"name":"uuid","description":"Operation uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"offset","description":"Start with mission number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of mission to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Mission"}}}}}}},"post":{"tags":["Operations > Missions"],"summary":"Create mission and add uuid to missions in Operation","description":"Create mission and add uuid to missions in Operation. Ids MUST BE unique for each mission. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createMissions","parameters":[{"name":"uuid","description":"Operation uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Mission","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Mission"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/operations/{uuid}/units":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Operations > Units"],"summary":"Get all units","description":"Get all units","operationId":"getUnits","parameters":[{"name":"uuid","description":"Operation uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"offset","description":"Start with unit number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of unit to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Unit"}}}}}}},"post":{"tags":["Operations > Units"],"summary":"Create unit and add uuid to units in Operation","description":"Create unit and add uuid to units in Operation. Ids MUST BE unique for each unit. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createUnits","parameters":[{"name":"uuid","description":"Operation uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Unit","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unit"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/operations/{uuid}/trackings":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Operation > Trackings"],"summary":"Get all Trackings for given Operation uuid","description":"Get all Trackings for given Operation uuid","operationId":"getTracking","parameters":[{"name":"uuid","description":"Tracking uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"offset","description":"Start with Tracking number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of Tracking to fetch. Default is 20.","in":"query"},{"name":"include","description":"Array of trackable aggregate types. Allowed are [unit, personnel]","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Tracking Type","default":"Tracking","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Tracking"}},"description":"Tracking Response","readOnly":true},"description":"Array of Trackings","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}}},"/api/operations/{uuid}/messages":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Operations > Messages"],"summary":"Get all messages","description":"Get all messages. ","operationId":"getAllMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"Message","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"Message Page offset","readOnly":true},"limit":{"type":"integer","description":"Message Page size","readOnly":true},"next":{"type":"integer","description":"Next Message Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"Array of Messages","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Operations > Messages"],"summary":"Create message","description":"Create message. The field [id] MUST BE unique for each Message. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Message Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/operations/{uuid}/messages/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Operations > Messages"],"summary":"Get message","description":"Get message. ","operationId":"getByIdMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Message Type","default":"Message","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Message"}},"description":"Message Response","readOnly":true}}}}}},"patch":{"tags":["Operations > Messages"],"summary":"Update message","description":"Update message. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"updateMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Message Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Operations > Messages"],"summary":"Delete message","description":"Delete message. ","operationId":"deleteMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/missions":{"parameters":[],"get":{"tags":["Missions"],"summary":"Get all missions","description":"Get all missions. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with mission number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of mission to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Mission Type","default":"Mission","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Mission"}},"description":"Mission Response","readOnly":true},"description":"Array of Missions","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}}},"/api/missions/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Missions"],"summary":"Get mission","description":"Get mission. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Mission Type","default":"Mission","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Mission"}},"description":"Mission Response","readOnly":true}}}}}},"patch":{"tags":["Missions"],"summary":"Update mission","description":"Update mission. Only fields in request are applied to Mission. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Mission Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Mission"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Missions"],"summary":"Delete mission","description":"Delete mission. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/missions/{uuid}/parts":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Missions > Parts"],"summary":"Get all mission parts","description":"Get all mission parts. ","operationId":"getAllMissionPart","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"MissionPart","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"MissionPart Page offset","readOnly":true},"limit":{"type":"integer","description":"MissionPart Page size","readOnly":true},"next":{"type":"integer","description":"Next MissionPart Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/MissionPart"},"description":"Array of MissionParts","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Missions > Parts"],"summary":"Create mission part","description":"Create mission part. The field [id] MUST BE unique for each MissionPart. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createMissionPart","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New MissionPart Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissionPart"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/missions/{uuid}/parts/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Missions > Parts"],"summary":"Get mission part","description":"Get mission part. ","operationId":"getByIdMissionPart","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"MissionPart Type","default":"MissionPart","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/MissionPart"}},"description":"MissionPart Response","readOnly":true}}}}}},"patch":{"tags":["Missions > Parts"],"summary":"Update mission part","description":"Update mission part. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"updateMissionPart","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update MissionPart Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissionPart"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Missions > Parts"],"summary":"Delete mission part","description":"Delete mission part. ","operationId":"deleteMissionPart","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/missions/{uuid}/results":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Missions > Results"],"summary":"Get all mission results","description":"Get all mission results. ","operationId":"getAllMissionResult","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"MissionResult","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"MissionResult Page offset","readOnly":true},"limit":{"type":"integer","description":"MissionResult Page size","readOnly":true},"next":{"type":"integer","description":"Next MissionResult Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/MissionResult"},"description":"Array of MissionResults","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Missions > Results"],"summary":"Create mission result","description":"Create mission result. The field [id] MUST BE unique for each MissionResult. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createMissionResult","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New MissionResult Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissionResult"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/missions/{uuid}/results/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Missions > Results"],"summary":"Get mission result","description":"Get mission result. ","operationId":"getByIdMissionResult","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"MissionResult Type","default":"MissionResult","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/MissionResult"}},"description":"MissionResult Response","readOnly":true}}}}}},"patch":{"tags":["Missions > Results"],"summary":"Update mission result","description":"Update mission result. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"updateMissionResult","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update MissionResult Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissionResult"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Missions > Results"],"summary":"Delete mission result","description":"Delete mission result. ","operationId":"deleteMissionResult","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/missions/{uuid}/messages":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Missions > Messages"],"summary":"Get all messages","description":"Get all messages. ","operationId":"getAllMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"Message","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"Message Page offset","readOnly":true},"limit":{"type":"integer","description":"Message Page size","readOnly":true},"next":{"type":"integer","description":"Next Message Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"Array of Messages","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Missions > Messages"],"summary":"Create message","description":"Create message. The field [id] MUST BE unique for each Message. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Message Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/missions/{uuid}/messages/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Missions > Messages"],"summary":"Get message","description":"Get message. ","operationId":"getByIdMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Message Type","default":"Message","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Message"}},"description":"Message Response","readOnly":true}}}}}},"patch":{"tags":["Missions > Messages"],"summary":"Update message","description":"Update message. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"updateMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Message Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Missions > Messages"],"summary":"Delete message","description":"Delete message. ","operationId":"deleteMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/personnels":{"parameters":[],"get":{"tags":["Personnels"],"summary":"Get all personnels","description":"Get all personnels. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with personnel number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of personnel to fetch. Default is 20.","in":"query"},{"name":"expand","description":"Expand response with information from references. Legal values are: 'person'","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Personnel Type","default":"Personnel","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Personnel"}},"description":"Personnel Response","readOnly":true},"description":"Array of Personnels","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}}},"/api/personnels/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Personnels"],"summary":"Get personnel","description":"Get personnel. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","required":false,"allowEmptyValue":false,"schema":{"type":"string"}},{"name":"expand","description":"Expand response with information from references. Legal values are: 'person'","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Personnel Type","default":"Personnel","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Personnel"}},"description":"Personnel Response","readOnly":true}}}}}},"patch":{"tags":["Personnels"],"summary":"Update personnel","description":"Update personnel. Only fields in request are applied to Personnel. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Personnel Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Personnel"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Personnels"],"summary":"Delete personnel","description":"Delete personnel. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/personnels/{uuid}/messages":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Personnels > Messages"],"summary":"Get all messages","description":"Get all messages. ","operationId":"getAllMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"Message","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"Message Page offset","readOnly":true},"limit":{"type":"integer","description":"Message Page size","readOnly":true},"next":{"type":"integer","description":"Next Message Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"Array of Messages","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Personnels > Messages"],"summary":"Create message","description":"Create message. The field [id] MUST BE unique for each Message. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Message Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/personnels/{uuid}/messages/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Personnels > Messages"],"summary":"Get message","description":"Get message. ","operationId":"getByIdMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Message Type","default":"Message","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Message"}},"description":"Message Response","readOnly":true}}}}}},"patch":{"tags":["Personnels > Messages"],"summary":"Update message","description":"Update message. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"updateMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Message Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Personnels > Messages"],"summary":"Delete message","description":"Delete message. ","operationId":"deleteMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/units":{"parameters":[],"get":{"tags":["Units"],"summary":"Get all units","description":"Get all units. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with unit number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of unit to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Unit Type","default":"Unit","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Unit"}},"description":"Unit Response","readOnly":true},"description":"Array of Units","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}}},"/api/units/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Units"],"summary":"Get unit","description":"Get unit. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Unit Type","default":"Unit","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Unit"}},"description":"Unit Response","readOnly":true}}}}}},"patch":{"tags":["Units"],"summary":"Update unit","description":"Update unit. Only fields in request are applied to Unit. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Unit Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unit"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Units"],"summary":"Delete unit","description":"Delete unit. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/units/{uuid}/personnels":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Units > Personnels"],"summary":"Get all personnels","description":"Get all personnels","operationId":"getPersonnels","parameters":[{"name":"uuid","description":"Unit uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"offset","description":"Start with personnel number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of personnel to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Personnel"}}}}}}},"patch":{"tags":["Units > Personnels"],"summary":"Add personnel fuuids to personnels in Unit","description":"Add personnel fuuids to personnels in Unit. Ids MUST BE unique for each personnel. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"addPersonnels","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"List of Aggregate Root fuuids","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AggregateList"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Units > Personnels"],"summary":"Remove personnel fuuids from personnels in Unit","description":"Remove personnel fuuids from personnels in Unit. Ids MUST BE unique for each personnel. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"removePersonnels","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"List of Aggregate Root fuuids","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AggregateList"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/units/{uuid}/messages":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Units > Messages"],"summary":"Get all messages","description":"Get all messages. ","operationId":"getAllMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"Message","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"Message Page offset","readOnly":true},"limit":{"type":"integer","description":"Message Page size","readOnly":true},"next":{"type":"integer","description":"Next Message Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"Array of Messages","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Units > Messages"],"summary":"Create message","description":"Create message. The field [id] MUST BE unique for each Message. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Message Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/units/{uuid}/messages/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Units > Messages"],"summary":"Get message","description":"Get message. ","operationId":"getByIdMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Message Type","default":"Message","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Message"}},"description":"Message Response","readOnly":true}}}}}},"patch":{"tags":["Units > Messages"],"summary":"Update message","description":"Update message. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"updateMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Message Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Units > Messages"],"summary":"Delete message","description":"Delete message. ","operationId":"deleteMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/organisations":{"parameters":[],"get":{"tags":["Organisations"],"summary":"Get all organisations","description":"Get all organisations. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with organisation number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of organisation to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Organisation Type","default":"Organisation","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Organisation"}},"description":"Organisation Response","readOnly":true},"description":"Array of Organisations","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Organisations"],"summary":"Create organisation","description":"Create organisation. The field [uuid] MUST BE unique for each Organisation. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New Organisation Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organisation"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/organisations/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Organisations"],"summary":"Get organisation","description":"Get organisation. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Organisation Type","default":"Organisation","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Organisation"}},"description":"Organisation Response","readOnly":true}}}}}},"patch":{"tags":["Organisations"],"summary":"Update organisation","description":"Update organisation. Only fields in request are applied to Organisation. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Organisation Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organisation"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Organisations"],"summary":"Delete organisation","description":"Delete organisation. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/organisations/{uuid}/import":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"patch":{"tags":["Organisations"],"summary":"Update division tree","description":"Update division tree. If no aggregate uuid is supplied it is assumed that given aggregate does not exist and an uuid will be generated before creating it.An '409 Conflict' is returned if an aggregate in the import exist with same name as the imported aggregate within the same organisation tree. If an aggregate uuid is given, it is assumed to exist and will be updated if found. An '404 Not found' is returned if not found. If given aggregate belongs to another organisation an '400 Bad request' is returned.Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"importDivisions","parameters":[{"name":"uuid","description":"Organisation uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Import Division tree","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DivisionTree"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"204":{"$ref":"#/components/responses/201"}}}},"/api/organisations/{uuid}/divisions":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Organisations"],"summary":"Get all divisions","description":"Get all divisions","operationId":"getDivisions","parameters":[{"name":"uuid","description":"Organisation uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"offset","description":"Start with division number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of division to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Division"}}}}}}},"post":{"tags":["Organisations"],"summary":"Create division and add uuid to divisions in Organisation","description":"Create division and add uuid to divisions in Organisation. Ids MUST BE unique for each division. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createDivisions","parameters":[{"name":"uuid","description":"Organisation uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Division","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Division"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/divisions":{"parameters":[],"get":{"tags":["Divisions"],"summary":"Get all divisions","description":"Get all divisions. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with division number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of division to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Division Type","default":"Division","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Division"}},"description":"Division Response","readOnly":true},"description":"Array of Divisions","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}}},"/api/divisions/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Divisions"],"summary":"Get division","description":"Get division. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Division Type","default":"Division","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Division"}},"description":"Division Response","readOnly":true}}}}}},"patch":{"tags":["Divisions"],"summary":"Update division","description":"Update division. Only fields in request are applied to Division. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Division Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Division"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Divisions"],"summary":"Delete division","description":"Delete division. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/divisions/{uuid}/departments":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Divisions"],"summary":"Get all departments","description":"Get all departments","operationId":"getDepartments","parameters":[{"name":"uuid","description":"Division uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"offset","description":"Start with department number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of department to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Department"}}}}}}},"post":{"tags":["Divisions"],"summary":"Create department and add uuid to departments in Division","description":"Create department and add uuid to departments in Division. Ids MUST BE unique for each department. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createDepartments","parameters":[{"name":"uuid","description":"Division uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Department","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Department"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/departments":{"parameters":[],"get":{"tags":["Departments"],"summary":"Get all departments","description":"Get all departments. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with department number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of department to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Department Type","default":"Department","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Department"}},"description":"Department Response","readOnly":true},"description":"Array of Departments","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}}},"/api/departments/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Departments"],"summary":"Get department","description":"Get department. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Department Type","default":"Department","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Department"}},"description":"Department Response","readOnly":true}}}}}},"patch":{"tags":["Departments"],"summary":"Update department","description":"Update department. Only fields in request are applied to Department. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Department Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Department"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Departments"],"summary":"Delete department","description":"Delete department. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/trackings":{"parameters":[],"get":{"tags":["Trackings"],"summary":"Get all trackings","description":"Get all trackings. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with tracking number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of tracking to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Tracking Type","default":"Tracking","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Tracking"}},"description":"Tracking Response","readOnly":true},"description":"Array of Trackings","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Trackings"],"summary":"Create tracking","description":"Create tracking. The field [uuid] MUST BE unique for each Tracking. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New Tracking Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tracking"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/trackings/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Trackings"],"summary":"Get tracking","description":"Get tracking. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Tracking Type","default":"Tracking","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Tracking"}},"description":"Tracking Response","readOnly":true}}}}}},"patch":{"tags":["Trackings"],"summary":"Update tracking","description":"Update tracking. Only fields in request are applied to Tracking. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Tracking Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tracking"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Trackings"],"summary":"Delete tracking","description":"Delete tracking. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/trackings/{uuid}/status":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"patch":{"tags":["Trackings"],"summary":"Update status","description":"Update status. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"transitionTrackingStatusRequest","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Tracking. Only field status is updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TrackingStatusRequest"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/trackings/{tuuid}/sources":{"parameters":[{"name":"tuuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Trackings > Sources"],"summary":"Get all sources","description":"Get all sources. ","operationId":"getAllSource","parameters":[{"name":"tuuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"Source","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"Source Page offset","readOnly":true},"limit":{"type":"integer","description":"Source Page size","readOnly":true},"next":{"type":"integer","description":"Next Source Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/Source"},"description":"Array of Sources","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Trackings > Sources"],"summary":"Create source","description":"Create source. The field [id] MUST BE unique for each Source. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createSource","parameters":[{"name":"tuuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Source Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Source"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/trackings/{tuuid}/sources/{suuid}":{"parameters":[{"name":"tuuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"suuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Trackings > Sources"],"summary":"Get source","description":"Get source. ","operationId":"getByIdSource","parameters":[{"name":"tuuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"suuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Source Type","default":"Source","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Source"}},"description":"Source Response","readOnly":true}}}}}},"delete":{"tags":["Trackings > Sources"],"summary":"Delete source","description":"Delete source. ","operationId":"deleteSource","parameters":[{"name":"tuuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"suuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/trackings/{uuid}/tracks":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Trackings > Tracks"],"summary":"Get all tracks","description":"Get all tracks. ","operationId":"getAllTrack","parameters":[{"name":"expand","description":"Expand response with optional fields. Legal values are: 'positions'","in":"query"},{"name":"option","description":"Options for fetching tracks. Legal values are: 'option=truncate:{value}:{unit}' (default is '-20:m'). Use 'truncate' limit number of positions in tracks where units are 'p' for positions, 'm' for minutes and 'h' for hours. If 'value' is negative, positions are truncated from head (last position).If 'value' is positive, positions are truncated from tail (first position).","in":"query","schema":{"type":"array","items":{"type":"string"}}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"Track","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"Track Page offset","readOnly":true},"limit":{"type":"integer","description":"Track Page size","readOnly":true},"next":{"type":"integer","description":"Next Track Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/Track"},"description":"Array of Tracks","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}}},"/api/trackings/{uuid}/tracks/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Trackings > Tracks"],"summary":"Get track","description":"Get track. ","operationId":"getByIdTrack","parameters":[{"name":"option","description":"Options for fetching tracks. Legal values are: 'option=truncate:{value}:{unit}' (default is '-20:m'). Use 'truncate' limit number of positions in tracks where units are 'p' for positions, 'm' for minutes and 'h' for hours. If 'value' is negative, positions are truncated from head (last position).If 'value' is positive, positions are truncated from tail (first position).","in":"query","schema":{"type":"array","items":{"type":"string"}}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Track Type","default":"Track","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Track"}},"description":"Track Response","readOnly":true}}}}}}},"/api/trackings/{uuid}/tracks/{id}/positions":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Trackings > Tracks"],"summary":"Get tracks/positions","description":"Get tracks/positions. ","operationId":"getPagedPosition","parameters":[{"name":"offset","description":"Start with position at given offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of positions to fetch. Default is 20.","in":"query"},{"name":"option","description":"Options for fetching tracks. Legal values are: 'option=truncate:{value}:{unit}' (default is '-20:m'). Use 'truncate' limit number of positions in tracks where units are 'p' for positions, 'm' for minutes and 'h' for hours. If 'value' is negative, positions are truncated from head (last position).If 'value' is positive, positions are truncated from tail (first position).","in":"query","schema":{"type":"array","items":{"type":"string"}}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PositionListResponse"}}}}}}},"/api/devices":{"parameters":[],"get":{"tags":["Devices"],"summary":"Get all devices","description":"Get all devices. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with device number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of device to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Device Type","default":"Device","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Device"}},"description":"Device Response","readOnly":true},"description":"Array of Devices","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Devices"],"summary":"Create device","description":"Create device. The field [uuid] MUST BE unique for each Device. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New Device Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Device"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/devices/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Devices"],"summary":"Get device","description":"Get device. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Device Type","default":"Device","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Device"}},"description":"Device Response","readOnly":true}}}}}},"patch":{"tags":["Devices"],"summary":"Update device","description":"Update device. Only fields in request are applied to Device. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Device Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Device"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Devices"],"summary":"Delete device","description":"Delete device. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}},"/api/devices/{uuid}/position":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Device > Position"],"summary":"Get position","description":"Get position. ","operationId":"getPosition","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Position Type","default":"Position","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Position"}},"description":"Value Object Response","readOnly":true}}}}}},"patch":{"tags":["Device > Position"],"summary":"Update position","description":"Update position. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"updatePosition","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Device. Only field position is updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Position"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/devices/{uuid}/positions":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"post":{"tags":["Device > Position"],"summary":"Process Positions","description":"Process Positions. Only fields in each Position are applied. Existing values WILL BE overwritten, others remain unchanged.","operationId":"batchPosition","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Position"},"description":"Process Position. Only fields in each Position are updated."}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"500":{"$ref":"#/components/responses/503"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/devices/{uuid}/messages":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Devices > Messages"],"summary":"Get all messages","description":"Get all messages. ","operationId":"getAllMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","default":"Message","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"Message Page offset","readOnly":true},"limit":{"type":"integer","description":"Message Page size","readOnly":true},"next":{"type":"integer","description":"Next Message Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"Array of Messages","readOnly":true}},"description":"Entities Response","readOnly":true}}}}}},"post":{"tags":["Devices > Messages"],"summary":"Create message","description":"Create message. The field [id] MUST BE unique for each Message. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"createMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Message Request","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}}},"/api/devices/{uuid}/messages/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Devices > Messages"],"summary":"Get message","description":"Get message. ","operationId":"getByIdMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Message Type","default":"Message","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"$ref":"#/components/schemas/Message"}},"description":"Message Response","readOnly":true}}}}}},"patch":{"tags":["Devices > Messages"],"summary":"Update message","description":"Update message. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"updateMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Message Request. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"}}},"delete":{"tags":["Devices > Messages"],"summary":"Delete message","description":"Delete message. ","operationId":"deleteMessage","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"503":{"$ref":"#/components/responses/503"}}}}},"components":{"schemas":{"AggregateResponse":{"type":"object","properties":{"type":{"type":"string","description":"Aggregate Root Type","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"type":"object","additionalProperties":true,"description":"Aggregate Root Data","readOnly":true}},"description":"Aggregate Root Response","readOnly":true},"AggregatePageResponse":{"type":"object","properties":{"total":{"type":"integer","description":"Number of aggregates","readOnly":true},"offset":{"type":"integer","description":"Aggregate Page offset","readOnly":true},"limit":{"type":"integer","description":"Aggregate Page size","readOnly":true},"next":{"type":"integer","description":"Next Aggregate Page offset","readOnly":true},"entries":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Aggregate Root Type","readOnly":true},"created":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"changed":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"deleted":{"type":"string","description":"When Aggregate was created","format":"date-time","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"type":"object","additionalProperties":true,"description":"Aggregate Root Data","readOnly":true}},"description":"Aggregate Root Response","readOnly":true},"description":"Array of Aggregate Objects","readOnly":true}},"description":"Entities Response","readOnly":true},"EntityResponse":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"type":"object","additionalProperties":true,"description":"Entity Object  Data","readOnly":true}},"description":"Entity Object Response","readOnly":true},"EntityPageResponse":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Entity Object Type","readOnly":true},"total":{"type":"integer","description":"Number of entities","readOnly":true},"offset":{"type":"integer","description":"null Page offset","readOnly":true},"limit":{"type":"integer","description":"null Page size","readOnly":true},"next":{"type":"integer","description":"Next null Page offset","readOnly":true},"path":{"type":"string","description":"Path to Entity Object List","readOnly":true},"entries":{"type":"array","items":{"type":"object","additionalProperties":true},"description":"Array of Entity Objects","readOnly":true}},"description":"Entities Response","readOnly":true},"ValueResponse":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Value Object Type","readOnly":true},"number":{"type":"integer","description":"Last event applied to aggregate (can be used as version)","readOnly":true},"data":{"type":"object","additionalProperties":true,"description":"Value Object  Data","readOnly":true}},"description":"Value Object Response","readOnly":true},"ValuePageResponse":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Value Object Type","readOnly":true},"total":{"type":"integer","description":"Number of nulls","readOnly":true},"offset":{"type":"integer","description":"null Page offset","readOnly":true},"limit":{"type":"integer","description":"null Page size","readOnly":true},"next":{"type":"integer","description":"Next null Page offset","readOnly":true},"path":{"type":"string","description":"Path to Value Object List","readOnly":true},"entries":{"type":"array","items":{"type":"object","additionalProperties":true},"description":"Array of Value Objects","readOnly":true}},"description":"Array Value Response","readOnly":true},"AggregateRef":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Aggregate Root UUID","format":"uuid","readOnly":true},"type":{"type":"string","description":"Aggregate Root Type","readOnly":true}},"description":"Aggregate Root Reference","readOnly":true},"AggregateList":{"type":"array","items":{"type":"string","description":"A [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","format":"uuid"},"additionalProperties":false,"description":"List of Aggregate Root uuids","readOnly":true},"ID":{"type":"string","description":"An id unique in current collection"},"UUID":{"type":"string","description":"A [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","format":"uuid"},"Conflict":{"type":"object","properties":{"type":{"enum":["merge","exists","deleted"],"type":"string","additionalProperties":false,"description":"Conflict type","readOnly":true},"mine":{"type":"object","additionalProperties":{"type":"object"},"description":"JsonPatch diffs between remote base and head of event stream","readOnly":true},"yours":{"type":"object","additionalProperties":{"type":"object"},"description":"JsonPatch diffs between remote base and request body","readOnly":true}},"description":"Conflict Error object with JsonPatch diffs for manually applying mine or your changes locally before the operation trying again.","readOnly":true},"PassCodes":{"required":["commander","personnel"],"type":"object","additionalProperties":false,"properties":{"commander":{"type":"string","description":"Passcode for access with Commander rights"},"personnel":{"type":"string","description":"Passcode for access with Personnel rights"}},"description":"Passcodes for Operation access rights"},"Author":{"required":["userId","timestamp"],"type":"object","additionalProperties":false,"properties":{"userId":{"type":"string","description":"Author user id"},"timestamp":{"type":"string","description":"When modification occurred","format":"date-time"}},"description":"Pass codes for access rights to spesific Incident instance"},"Coordinates":{"maxItems":3,"minItems":2,"type":"array","items":{"type":"number"},"additionalProperties":false,"description":"GeoJSON coordinate. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element."},"Geometry":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"}},"description":"GeoJSon geometry"},"Point":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Point"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"},"coordinates":{"$ref":"#/components/schemas/Coordinates"}},"description":"GeoJSON Point"},"LineString":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["LineString"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"},"coordinates":{"type":"array","items":{"$ref":"#/components/schemas/Coordinates"}}},"description":"GeoJSON LineString"},"Polygon":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Polygon"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"},"coordinates":{"type":"array","items":{"type":"array","items":{"$ref":"#/components/schemas/Coordinates"}}}},"description":"GeoJSON Polygon"},"MultiPoint":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["MultiPoint"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"},"coordinates":{"type":"array","items":{"maxItems":3,"minItems":2,"type":"array","items":{"type":"number"},"additionalProperties":false,"description":"GeoJSON coordinate. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element."}}},"description":"GeoJSON MultiPoint"},"MultiLineString":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["MultiLineString"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"},"coordinates":{"type":"array","items":{"type":"array","items":{"$ref":"#/components/schemas/Coordinates"}}}},"description":"GeoJSON MultiLineString"},"MultiPolygon":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["MultiPolygon"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"},"coordinates":{"type":"array","items":{"type":"array","items":{"type":"array","items":{"$ref":"#/components/schemas/Coordinates"}}}}},"description":"GeoJSON MultiPolygon"},"GeometryCollection":{"type":"object","properties":{"type":{"enum":["GeometryCollection"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"},"geometries":{"type":"array","items":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"}},"description":"GeoJSon geometry"}}},"description":"GeoJSON GeometryCollection"},"Feature":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Feature"],"type":"string","additionalProperties":false,"description":"GeoJSON Feature type"},"geometry":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"}},"description":"GeoJSon geometry"},"properties":{"type":"object","properties":{"name":{"type":"string","description":"Feature name"},"description":{"type":"string","description":"Feature description"}}}},"description":"GeoJSON Feature"},"FeatureCollection":{"type":"object","properties":{"type":{"enum":["FeatureCollection"],"type":"string","additionalProperties":false,"description":"GeoJSON Feature type"},"features":{"type":"array","items":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Feature"],"type":"string","additionalProperties":false,"description":"GeoJSON Feature type"},"geometry":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"}},"description":"GeoJSon geometry"},"properties":{"type":"object","properties":{"name":{"type":"string","description":"Feature name"},"description":{"type":"string","description":"Feature description"}}}},"description":"GeoJSON Feature"}}},"description":"GeoJSON FeatureCollection"},"Circle":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Feature"],"type":"string","additionalProperties":false,"description":"GeoJSON Feature type"},"geometry":{"$ref":"#/components/schemas/Point"},"properties":{"type":"object","properties":{"name":{"type":"string","description":"Feature name"},"description":{"type":"string","description":"Feature description"},"radius":{"type":"number","description":"Circle radius i meters"}}}},"description":"Circle feature described by a GeoJSON point in center and a radius as an property"},"Rectangle":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Feature"],"type":"string","additionalProperties":false,"description":"GeoJSON Feature type"},"geometry":{"maxItems":2,"minItems":2,"type":"array","items":{"$ref":"#/components/schemas/Point"}},"properties":{"type":"object","properties":{"name":{"type":"string","description":"Feature name"},"description":{"type":"string","description":"Feature description"}}}},"description":"Rectangle feature described by two GeoJSON points forming upper left and lower right corners"},"Position":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Feature"],"type":"string","additionalProperties":false,"description":"GeoJSON Feature type"},"geometry":{"$ref":"#/components/schemas/Point"},"properties":{"type":"object","properties":{"name":{"type":"string","description":"Feature name"},"description":{"type":"string","description":"Feature description"},"timestamp":{"type":"string","description":"Timestamp in ISO8601 Date Time String Format","format":"date-time"},"source":{"enum":["manual","device","aggregate"],"type":"string","additionalProperties":false,"description":"Position source","default":"manual"},"activity":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["still","on_foot","walking","running","unknown","on_bicycle","in_vehicle"],"type":"string","additionalProperties":false,"description":"Activity tyep","default":"unknown"},"confidence":{"type":"integer","additionalProperties":false,"description":"Activity type confidence (0-100%)","default":"100"}},"description":"Activity Value Object"},"accuracy":{"type":"number","description":"Position accuracy"},"bearing":{"type":"number","description":"Bearing at given position in degrees"},"speed":{"type":"number","description":"Speed at given position in meter/seconds"}}}},"description":"Position feature described by a GeoJSON point with accuracy, point type and timestamp","readOnly":false},"PositionListResponse":{"type":"object","properties":{"aggregate":{"$ref":"#/components/schemas/AggregateRef"},"type":{"type":"string","description":"Value Object Type","default":"Position","readOnly":true},"total":{"type":"integer","description":"Number of Positions","readOnly":true},"offset":{"type":"integer","description":"Position Page offset","readOnly":true},"limit":{"type":"integer","description":"Position Page size","readOnly":true},"next":{"type":"integer","description":"Next Position Page offset","readOnly":true},"path":{"type":"string","description":"Path to Value Object List","readOnly":true},"entries":{"type":"array","items":{"$ref":"#/components/schemas/Position"},"description":"Array of Positions","readOnly":true}},"description":"Array Value Response","readOnly":true},"Message":{"type":"object","properties":{"id":{"$ref":"#/components/schemas/ID"},"type":{"enum":["clue","general","objective","personnel","device","subject","unit"],"type":"string","additionalProperties":false,"description":"Message type"},"subject":{"type":"string","description":"Message subject"},"body":{"type":"object","additionalProperties":true,"description":"Message body"}},"description":"GeoJSON FeatureCollection"},"RepositoryMeta":{"type":"object","properties":{"type":{"type":"string","description":"Aggregate Type","readOnly":true},"count":{"type":"integer","description":"Number of aggregates","readOnly":true},"queue":{"type":"object","properties":{"pressure":{"type":"object","properties":{"push":{"type":"integer","description":"Number of pending pushes","readOnly":true},"command":{"type":"integer","description":"Number of pending commands","readOnly":true},"total":{"type":"integer","description":"Total pressure","readOnly":true},"maximum":{"type":"integer","description":"Maximum allowed pressure","readOnly":true},"exceeded":{"type":"boolean","description":"True if maximum pressure is exceeded","readOnly":true}},"description":"Queue pressure data","readOnly":true},"status":{"type":"object","properties":{"idle":{"type":"boolean","description":"True if queue is idle","readOnly":true},"ready":{"type":"boolean","description":"True if queue is ready to process requests","readOnly":true},"disposed":{"type":"boolean","description":"True if queue is disposed","readOnly":true}},"description":"Queue status","readOnly":true}},"description":"Queue metadata","readOnly":true},"snapshot":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique Snapshot id","format":"uuid","readOnly":true},"number":{"type":"integer","description":"Snapshot event number (or position in projection if using instance-streams)","readOnly":true},"keep":{"type":"integer","description":"Number of snapshots to keep until deleting oldest","readOnly":true},"unsaved":{"type":"integer","description":"Number of unsaved events","readOnly":true},"threshold":{"type":"integer","description":"Number of unsaved events before saving to next snapshot","readOnly":true},"automatic":{"type":"integer","description":"Control flag for automatic snapshots when threshold is reached","readOnly":true},"partial":{"type":"object","properties":{"missing":{"type":"integer","description":"Number of missing events in snapshot","readOnly":true}},"description":"Snapshot contains partial state if defined","readOnly":true},"aggregates":{"type":"object","properties":{"count":{"type":"integer","description":"Total number aggregates in snapshot","readOnly":true},"items":{"type":"array","items":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique aggregate id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Aggregate Type","readOnly":true},"number":{"type":"integer","description":"Current event number","readOnly":true},"created":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique event id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Event Type","readOnly":true},"timestamp":{"type":"string","description":"When event occurred","format":"date-time","readOnly":true}},"description":"Created by given event","readOnly":true},"changed":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique event id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Event Type","readOnly":true},"timestamp":{"type":"string","description":"When event occurred","format":"date-time","readOnly":true}},"description":"Last changed by given event","readOnly":true},"data":{"type":"object","additionalProperties":true,"description":"Map of JSON-Patch compliant values","readOnly":true}}},"description":"Array of skipped events"}}}},"description":"Queue pressure data","readOnly":true},"connection":{"type":"object","properties":{"metrics":{"type":"object","properties":{"read":{"type":"object","properties":{"count":{"type":"integer","description":"Number of measurements","readOnly":true},"duration":{"type":"integer","description":"Last Read time in ms","readOnly":true},"durationAverage":{"type":"integer","description":"Read time average","readOnly":true}},"description":"Read metrics","readOnly":true},"write":{"type":"object","properties":{"count":{"type":"integer","description":"Number of measurements","readOnly":true},"duration":{"type":"integer","description":"Last Write time in ms","readOnly":true},"durationAverage":{"type":"integer","description":"Write time average","readOnly":true}},"description":"Write metrics","readOnly":true}},"description":"Connection metrics","readOnly":true}}},"subscriptions":{"type":"object","properties":{"catchup":{"type":"object","properties":{"isAutomatic":{"type":"boolean","description":"True if automatic catchup is activated","readOnly":true},"exists":{"type":"boolean","description":"True if subscription exists","readOnly":true},"last":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique event id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Event Type","readOnly":true},"timestamp":{"type":"string","description":"When event occurred","format":"date-time","readOnly":true}},"description":"Last event processed","readOnly":true},"status":{"type":"object","properties":{"isPaused":{"type":"boolean","description":"True if subscription is paused","readOnly":true},"isCancelled":{"type":"boolean","description":"True if subscription is cancelled","readOnly":true},"isCompeting":{"type":"boolean","description":"True if subscription is competing (pulling when false)","readOnly":true}},"description":"Catchup subscription status","readOnly":true},"metrics":{"type":"object","properties":{"processed":{"type":"integer","description":"Number of events processed","readOnly":true},"reconnects":{"type":"integer","description":"Number of reconnections","readOnly":true}},"description":"Catchup subscription statistics","readOnly":true}},"description":"Catchup subscription","readOnly":true},"push":{"type":"object","properties":{"exists":{"type":"boolean","description":"True if subscription exists","readOnly":true},"isPaused":{"type":"boolean","description":"True if subscription is paused","readOnly":true}},"description":"Request queue subscription status","readOnly":true}}}}},"RepositoryCommand":{"type":"object","properties":{"action":{"enum":["rebuild","replay","catchup"],"type":"string","additionalProperties":false,"description":"Snapshot actions"},"params":{"type":"object","additionalProperties":false,"properties":{"uuids":{"type":"array","items":{"type":"string"},"description":"List of aggregate uuids which command applies to"}},"description":"Command properties"}}},"AggregateMeta":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique aggregate id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Aggregate Type","readOnly":true},"number":{"type":"integer","description":"Current event number","readOnly":true},"created":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique event id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Event Type","readOnly":true},"timestamp":{"type":"string","description":"When event occurred","format":"date-time","readOnly":true}},"description":"Created by given event","readOnly":true},"changed":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique event id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Event Type","readOnly":true},"timestamp":{"type":"string","description":"When event occurred","format":"date-time","readOnly":true}},"description":"Last changed by given event","readOnly":true},"modifications":{"type":"integer","description":"Total number of modifications","readOnly":true},"applied":{"type":"object","properties":{"count":{"type":"integer","description":"Total number of applied events","readOnly":true},"items":{"type":"array","items":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique event id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Event Type","readOnly":true},"timestamp":{"type":"string","description":"When event occurred","format":"date-time","readOnly":true}}},"description":"Array of skipped events"}}},"skipped":{"type":"object","properties":{"count":{"type":"integer","description":"Total number of skipped events","readOnly":true},"items":{"type":"array","items":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique event id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Event Type","readOnly":true},"timestamp":{"type":"string","description":"When event occurred","format":"date-time","readOnly":true}}},"description":"Array of skipped events"}}},"pending":{"type":"object","properties":{"count":{"type":"integer","description":"Total number of local events pending push","readOnly":true},"items":{"type":"array","items":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique event id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Event Type","readOnly":true},"timestamp":{"type":"string","description":"When event occurred","format":"date-time","readOnly":true}}},"description":"Array of local events pending push"}}},"data":{"type":"object","additionalProperties":true,"description":"Map of JSON-Patch compliant values","readOnly":true}}},"AggregateCommand":{"type":"object","properties":{"action":{"enum":["replay","catchup","replace"],"type":"string","additionalProperties":false,"description":"Snapshot actions"},"params":{"type":"object","additionalProperties":false,"properties":{"data":{"type":"object","additionalProperties":true,"description":"Map of JSON-compliant values"},"patches":{"type":"array","items":{"type":"object","additionalProperties":true,"description":"Map of JSON-Patch compliant values"}}},"description":"Command properties"}}},"SnapshotMeta":{"type":"object","properties":{"last":{"type":"string","description":"Uuid of snapshot last saved","format":"uuid","readOnly":true},"uuid":{"type":"string","description":"Snapshot uuid","format":"uuid","readOnly":true},"number":{"type":"integer","description":"Snapshot event number (or position in projection if using instance-streams)","readOnly":true},"timestamp":{"type":"string","description":"When snapshot was saved","format":"date-time"},"unsaved":{"type":"integer","description":"Number of unsaved events","readOnly":true},"partial":{"type":"object","properties":{"missing":{"type":"integer","description":"Number of missing events in snapshot","readOnly":true}},"description":"Snapshot contains partial state if defined","readOnly":true},"config":{"type":"object","properties":{"keep":{"type":"integer","description":"Number of snapshots to keep until deleting oldest","readOnly":true},"threshold":{"type":"integer","description":"Number of unsaved events before saving to next snapshot","readOnly":true},"automatic":{"type":"integer","description":"Control flag for automatic snapshots when threshold is reached","readOnly":true}},"description":"Snapshots configuration","readOnly":true},"metrics":{"type":"object","properties":{"snapshots":{"type":"integer","description":"Number of snapshots","readOnly":true},"save":{"type":"object","properties":{"count":{"type":"integer","description":"Number of measurements","readOnly":true},"duration":{"type":"integer","description":"Last Save time in ms","readOnly":true},"durationAverage":{"type":"integer","description":"Save time average","readOnly":true}},"description":"Save metrics","readOnly":true}},"description":"Snapshot metrics","readOnly":true},"aggregates":{"type":"object","properties":{"count":{"type":"integer","description":"Total number aggregates in snapshot","readOnly":true},"items":{"type":"array","items":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique aggregate id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Aggregate Type","readOnly":true},"number":{"type":"integer","description":"Current event number","readOnly":true},"created":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique event id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Event Type","readOnly":true},"timestamp":{"type":"string","description":"When event occurred","format":"date-time","readOnly":true}},"description":"Created by given event","readOnly":true},"changed":{"type":"object","properties":{"uuid":{"type":"string","description":"Globally unique event id","format":"uuid","readOnly":true},"type":{"type":"string","description":"Event Type","readOnly":true},"timestamp":{"type":"string","description":"When event occurred","format":"date-time","readOnly":true}},"description":"Last changed by given event","readOnly":true},"data":{"type":"object","additionalProperties":true,"description":"Map of JSON-Patch compliant values","readOnly":true}}},"description":"Array of skipped events"}}}},"description":"Queue pressure data","readOnly":true},"SnapshotCommand":{"type":"object","properties":{"action":{"enum":["save","configure"],"type":"string","additionalProperties":false,"description":"Snapshot actions"},"params":{"type":"object","additionalProperties":false,"properties":{"force":{"type":"boolean","description":"[save] ]Control flag forcing save"},"keep":{"type":"integer","description":"[configure] Number of snapshots to keep (oldest are deleted)"},"threshold":{"type":"integer","description":"[configure] Snapshot threshold"},"automatic":{"type":"boolean","description":"[configure] Control flag for automatic snapshots when threshold is reached"}},"description":"Command properties"}}},"AppConfig":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Unique application configuration id","format":"uuid"},"version":{"type":"integer","description":"AppConfig version for backwards compatibility","default":1},"udid":{"type":"string","description":"Unique device id, typically [ANDROID_ID] for Android and [identifierForVendor] for iOS platforms","format":"uuid"},"demo":{"type":"boolean","description":"Use demo-mode (no real data and any login)","default":true},"demoRole":{"enum":["oversight","commander","unit_leader","personnel"],"type":"string","description":"Role of logged in user in demo-mode","default":"commander"},"onboarded":{"type":"boolean","description":"Show onboarding before next login","default":true},"firstSetup":{"type":"boolean","description":"Show first setup before next login","default":true},"securityMode":{"enum":["personal","shared"],"type":"string","description":"Security mode applied to application"},"securityType":{"enum":["pin","fingerprint"],"type":"string","description":"Security type"},"securityPin":{"type":"string","description":"Security pin"},"securityLockAfter":{"type":"integer","description":"Lock idle device (no user interactions) after in given number of seconds","default":2700},"talkGroups":{"type":"array","items":{"type":"string"},"description":"List of default talk group names","default":["Oslo"]},"talkGroupCatalog":{"type":"string","description":"Default talk group catalog name","default":"Oslo"},"idpHints":{"type":"array","items":{"type":"string"},"description":"List of idp hints","default":["google"]},"trustedDomains":{"type":"array","items":{"type":"string"},"description":"List of trusted domains","default":["rodekors.org","discoos.org"]},"units":{"type":"array","items":{"type":"string"},"description":"List of templates for units to create automatically when opening an new operation"},"storage":{"type":"boolean","description":"Storage access is granted","default":false},"locationAlways":{"type":"boolean","description":"Location access always is is granted","default":false},"locationWhenInUse":{"type":"boolean","description":"Location access when app is in use is granted","default":false},"locationStoreLocally":{"type":"boolean","description":"Store locations locally","default":true},"locationAllowSharing":{"type":"boolean","description":"Share locations with operation when personnel","default":true},"activityRecognition":{"type":"boolean","description":"Activity recognition access is granted","default":false},"mapCacheTTL":{"type":"integer","description":"Number of days downloaded map tiles are cached locally","default":30},"mapRetinaMode":{"type":"boolean","description":"Show high resolution maps is possible","default":false},"mapCacheCapacity":{"type":"integer","description":"Maximum number map tiles cached locally","default":15000},"locationAccuracy":{"enum":["lowest","low","medium","high","best","navigation","automatic"],"type":"string","description":"Requested location accuracy","default":"high"},"locationFastestInterval":{"type":"integer","description":"Fastest interval between location updates in milliseconds","default":1000},"locationSmallestDisplacement":{"type":"integer","description":"Smallest displacment in meters before update is received","default":3},"keepScreenOn":{"type":"boolean","description":"Keep screen on when maps are displayed","default":false},"callsignReuse":{"type":"boolean","description":"Reuse callsigns for retired units","default":true},"sentryDns":{"type":"string","description":"Sentry DNS for remote error reporting","format":"uri","default":"https://2d6130375010466b9652b9e9efc415cc@sentry.io/1523681"}},"description":"SarSys application configuration"},"Person":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"fname":{"type":"string","description":"First name"},"lname":{"type":"string","description":"Last name"},"phone":{"type":"string","description":"Phone number"},"email":{"type":"string","description":"E-mail address"},"userId":{"type":"string","description":"Authenticated used id"},"temporary":{"type":"boolean","description":"Temporary person"}}},"Affiliation":{"required":["person"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"person":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Person UUID","format":"uuid","readOnly":true},"type":{"type":"string","description":"Person Type","default":"Person","readOnly":true}},"description":"Person reference for PII lookup","readOnly":true},"org":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Organisation UUID","format":"uuid","readOnly":false},"type":{"type":"string","description":"Organisation Type","default":"Organisation","readOnly":false}},"description":"Organisation which personnel is affiliated with","readOnly":false},"div":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Division UUID","format":"uuid","readOnly":false},"type":{"type":"string","description":"Division Type","default":"Division","readOnly":false}},"description":"Division which personnel is affiliated with","readOnly":false},"dep":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Department UUID","format":"uuid","readOnly":false},"type":{"type":"string","description":"Department Type","default":"Department","readOnly":false}},"description":"Department which personnel is affiliated with","readOnly":false},"type":{"enum":["member","employee","external","volunteer"],"type":"string","additionalProperties":false,"description":"Affiliation type","default":"member"},"status":{"enum":["available","short_notice","unavailable"],"type":"string","additionalProperties":false,"description":"Personnel standby status","default":"available"},"active":{"type":"boolean","description":"Affiliation status flag"}},"description":"Affiliation information"},"AffiliationType":{"enum":["member","employee","external","volunteer"],"type":"string","additionalProperties":false,"description":"Affiliation type","default":"member"},"AffiliationStandbyStatus":{"enum":["member","employee","external","volunteer"],"type":"string","additionalProperties":false,"description":"Affiliation type","default":"member"},"Incident":{"required":["uuid","name","summary","type","occurred"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"name":{"type":"string","description":"Name of incident scene"},"summary":{"type":"string","description":"Situation summary"},"type":{"enum":["lost","distress","disaster","other"],"type":"string","additionalProperties":false,"description":"Incident type"},"exercise":{"type":"boolean","description":"Exercise flag"},"status":{"enum":["registered","handling","closed"],"type":"string","additionalProperties":false,"description":"Incident status","default":"registered"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","additionalProperties":false,"description":"Incident resolution","default":"unresolved"},"occurred":{"type":"string","description":"When Incident occurred","format":"date-time"},"transitions":{"type":"array","items":{"type":"object","additionalProperties":false,"properties":{"status":{"enum":["registered","handling","closed"],"type":"string","additionalProperties":false,"description":"Incident status","default":"registered"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","additionalProperties":false,"description":"Incident resolution","default":"unresolved"},"timestamp":{"type":"string","description":"When transition occurred","format":"date-time"}}},"description":"State transitions (read only)","readOnly":true},"clues":{"type":"array","items":{"$ref":"#/components/schemas/Clue"},"description":"List of Clues for planning and response","readOnly":true},"subjects":{"type":"array","items":{"$ref":"#/components/schemas/UUID"},"description":"List of uuids of Subjects impacted by this Incident","readOnly":true},"operations":{"type":"array","items":{"$ref":"#/components/schemas/UUID"},"description":"List of uuids of Operations responding to this Incident","readOnly":true},"messages":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"List of messages added to Incident","readOnly":true}}},"Clue":{"required":["id","name","type","quality"],"type":"object","additionalProperties":false,"properties":{"id":{"$ref":"#/components/schemas/ID"},"name":{"type":"string","description":"Clue name"},"description":{"type":"string","description":"Clue description"},"type":{"enum":["find","condition","observation","circumstance"],"type":"string","additionalProperties":false,"description":"Clue type"},"quality":{"enum":["confirmed","plausable","possible","unlikely","rejected"],"type":"string","additionalProperties":false,"description":"Clue quality assessment"},"location":{"$ref":"#/components/schemas/Location"}},"description":"Clue Response"},"Subject":{"required":["uuid","name","type","situation","location"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"incident":{"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Uuid of incident which this subject is affected by","format":"uuid"}},"readOnly":true},"name":{"type":"string","description":"Subject name"},"situation":{"type":"string","description":"Subject situation"},"type":{"enum":["person","vehicle","other"],"type":"string","additionalProperties":false,"description":"Subject type"},"location":{"$ref":"#/components/schemas/Location"}},"description":"Objective Schema"},"Operation":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"incident":{"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"}},"readOnly":true},"name":{"type":"string","description":"Name of operation scene"},"type":{"enum":["search","rescue","other"],"type":"string","additionalProperties":false,"description":"Operation type"},"author":{"required":["userId","timestamp"],"type":"object","additionalProperties":false,"properties":{"userId":{"type":"string","description":"Author user id"},"timestamp":{"type":"string","description":"When modification occurred","format":"date-time"}},"description":"Pass codes for access rights to spesific Incident instance"},"status":{"enum":["planned","enroute","onscene","completed"],"type":"string","additionalProperties":false,"description":"Operation status","default":"planned"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","additionalProperties":false,"description":"Operation resolution","default":"unresolved"},"reference":{"type":"string","description":"External reference from requesting authority"},"justification":{"type":"string","description":"Justification for responding"},"commander":{"type":"object","properties":{"uuid":{"$ref":"#/components/schemas/UUID"}},"description":"Reference to personnel in command"},"ipp":{"required":["point"],"type":"object","additionalProperties":false,"properties":{"point":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Point"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"},"coordinates":{"$ref":"#/components/schemas/Coordinates"}},"description":"Location point"},"address":{"type":"object","additionalProperties":false,"properties":{"lines":{"type":"array","items":{"type":"string"},"description":"Pass codes for authorizing access to Operation data"},"city":{"type":"string","description":"City name"},"postalCode":{"type":"string","description":"Postal, state or zip code"},"countryCode":{"type":"string","description":"ISO 3166 country code"}},"description":"Location address"},"description":{"type":"string","description":"Location description"}},"description":"Initial planning point"},"meetup":{"required":["point"],"type":"object","additionalProperties":false,"properties":{"point":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Point"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"},"coordinates":{"$ref":"#/components/schemas/Coordinates"}},"description":"Location point"},"address":{"type":"object","additionalProperties":false,"properties":{"lines":{"type":"array","items":{"type":"string"},"description":"Pass codes for authorizing access to Operation data"},"city":{"type":"string","description":"City name"},"postalCode":{"type":"string","description":"Postal, state or zip code"},"countryCode":{"type":"string","description":"ISO 3166 country code"}},"description":"Location address"},"description":{"type":"string","description":"Location description"}},"description":"On scene meeting point"},"passcodes":{"required":["commander","personnel"],"type":"object","additionalProperties":false,"properties":{"commander":{"type":"string","description":"Passcode for access with Commander rights"},"personnel":{"type":"string","description":"Passcode for access with Personnel rights"}},"description":"Passcodes for Operation access rights"},"transitions":{"type":"array","items":{"type":"object","additionalProperties":false,"properties":{"status":{"enum":["planned","enroute","onscene","completed"],"type":"string","additionalProperties":false,"description":"Operation status","default":"planned"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","additionalProperties":false,"description":"Operation resolution","default":"unresolved"},"timestamp":{"type":"string","description":"When transition occured","format":"date-time"}}},"description":"State transitions (read only)","readOnly":true},"talkgroups":{"type":"array","items":{"$ref":"#/components/schemas/TalkGroup"},"description":"List of talk gropus in use"},"objectives":{"type":"array","items":{"$ref":"#/components/schemas/Objective"},"description":"List of Operation objectives","readOnly":true},"missions":{"type":"array","items":{"$ref":"#/components/schemas/UUID"},"description":"List of uuid of Missions executed by this operation","readOnly":true},"units":{"type":"array","items":{"$ref":"#/components/schemas/UUID"},"description":"List of uuid of Units mobilized for this operation","readOnly":true},"personnels":{"type":"array","items":{"$ref":"#/components/schemas/UUID"},"description":"List of uuid of Personnels mobilized for this operation","readOnly":true},"messages":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"List of messages added to Operation","readOnly":true}}},"Address":{"type":"object","additionalProperties":false,"properties":{"lines":{"type":"array","items":{"type":"string"},"description":"Pass codes for authorizing access to Operation data"},"city":{"type":"string","description":"City name"},"postalCode":{"type":"string","description":"Postal, state or zip code"},"countryCode":{"type":"string","description":"ISO 3166 country code"}},"description":"Address Schema (value object)"},"Location":{"required":["point"],"type":"object","additionalProperties":false,"properties":{"point":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Point"],"type":"string","additionalProperties":false,"description":"GeoJSON Geometry type"},"coordinates":{"$ref":"#/components/schemas/Coordinates"}},"description":"Location point"},"address":{"type":"object","additionalProperties":false,"properties":{"lines":{"type":"array","items":{"type":"string"},"description":"Pass codes for authorizing access to Operation data"},"city":{"type":"string","description":"City name"},"postalCode":{"type":"string","description":"Postal, state or zip code"},"countryCode":{"type":"string","description":"ISO 3166 country code"}},"description":"Location address"},"description":{"type":"string","description":"Location description"}},"description":"Location Schema (value object)"},"Objective":{"required":["name","type","resolution"],"type":"object","additionalProperties":false,"properties":{"id":{"$ref":"#/components/schemas/ID"},"name":{"type":"string","description":"Objective name"},"description":{"type":"string","description":"Objective description"},"type":{"enum":["locate","rescue","assist"],"type":"string","description":"Objective type"},"location":{"type":"array","items":{"$ref":"#/components/schemas/Location"},"description":"Rescue or assitance location"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","additionalProperties":false,"description":"Objective resolution","default":"unresolved"}},"description":"Objective Response"},"TalkGroup":{"required":["id","name","type"],"type":"object","additionalProperties":false,"properties":{"id":{"$ref":"#/components/schemas/ID"},"name":{"type":"string","description":"Talkgroup name"},"type":{"enum":["tetra","marine","analog"],"type":"string","additionalProperties":false,"description":"Talkgroup type"}},"description":"TalkGroup Response"},"Mission":{"required":["uuid","type"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"operation":{"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"}},"readOnly":true},"description":{"type":"string","description":"Mission description"},"type":{"enum":["search","rescue","other"],"type":"string","additionalProperties":false,"description":"Mission type"},"status":{"enum":["created","planned","assigned","inprogress","completed"],"type":"string","additionalProperties":false,"description":"Mission status","default":"created"},"priority":{"enum":["highest","high","medium","low","lowest"],"type":"string","additionalProperties":false,"description":"Mission priority","default":"medium"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","additionalProperties":false,"description":"Mission status","default":"unresolved"},"transitions":{"type":"array","items":{"type":"array","items":{"type":"object","properties":{"status":{"enum":["created","planned","assigned","inprogress","completed"],"type":"string","additionalProperties":false,"description":"Mission status","default":"created"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","additionalProperties":false,"description":"Mission status","default":"unresolved"},"timestamp":{"type":"string","description":"When transition occured","format":"date-time"}}},"additionalProperties":false},"description":"State transitions (read only)","readOnly":true},"parts":{"type":"array","items":{"$ref":"#/components/schemas/MissionPart"},"description":"Points, linestrings, rectangles and circles describing mission parts","readOnly":true},"results":{"type":"array","items":{"$ref":"#/components/schemas/MissionResult"},"description":"Points, linestrings, rectangles and circles describing the results","readOnly":true},"assignedTo":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Unit UUID","format":"uuid","readOnly":true},"type":{"type":"string","description":"Unit Type","default":"Unit","readOnly":true}},"description":"Unit assigned to this mission","readOnly":true},"messages":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"List of messages added to Mission","readOnly":true}}},"MissionPart":{"required":["id"],"type":"object","additionalProperties":false,"properties":{"id":{"$ref":"#/components/schemas/ID"},"name":{"type":"string","description":"Mission part name"},"description":{"type":"string","description":"Mission part description"},"data":{"$ref":"#/components/schemas/FeatureCollection"}},"description":"MissionPart Response"},"MissionResult":{"required":["id"],"type":"object","additionalProperties":false,"properties":{"id":{"$ref":"#/components/schemas/ID"},"name":{"type":"string","description":"Mission result name"},"description":{"type":"string","description":"Mission result description"},"data":{"$ref":"#/components/schemas/FeatureCollection"}},"description":"MissionResult Response"},"Personnel":{"required":["uuid","affiliation"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"status":{"enum":["none","alerted","enroute","onscene","leaving","retired"],"type":"string","additionalProperties":false,"description":"Personnel status","default":"alerted"},"function":{"enum":["personnel","commander","unit_leader"],"type":"string","additionalProperties":false,"description":"Personnel function","default":"personnel"},"operation":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Operation UUID","format":"uuid","readOnly":true},"type":{"type":"string","description":"Operation Type","default":"Operation","readOnly":true}},"description":"Operation which this personnel is allocated to","readOnly":true},"unit":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Unit UUID","format":"uuid","readOnly":true},"type":{"type":"string","description":"Unit Type","default":"Unit","readOnly":true}},"description":"Unit which this personnel is assigned to","readOnly":true},"affiliation":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Affiliation UUID","format":"uuid","readOnly":true},"type":{"type":"string","description":"Affiliation Type","default":"Affiliation","readOnly":true}},"description":"Affiliation reference for PII lookup","readOnly":true},"tracking":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Tracking UUID","format":"uuid","readOnly":true},"type":{"type":"string","description":"Tracking Type","default":"Tracking","readOnly":true}},"description":"Unique id of tracking object created for this personnel. Only writable on creation.","readOnly":true},"transitions":{"type":"array","items":{"type":"object","additionalProperties":false,"properties":{"status":{"enum":["none","alerted","enroute","onscene","leaving","retired"],"type":"string","additionalProperties":false,"description":"Personnel status","default":"alerted"},"timestamp":{"type":"string","description":"When transition occurred","format":"date-time"}}},"description":"State transitions (read only)","readOnly":true},"messages":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"List of messages added to Personnel","readOnly":true}}},"Unit":{"required":["uuid","type","status","number","callsign"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"operation":{"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"}},"description":"Operation which this unit belongs to","readOnly":true},"type":{"enum":["team","k9","boat","vehicle","snowmobile","atv","commandpost","other"],"type":"string","additionalProperties":false,"description":"Unit type"},"number":{"type":"integer","description":"Unit number"},"affiliation":{"$ref":"#/components/schemas/Affiliation"},"phone":{"type":"string","description":"Unit phone number"},"callsign":{"type":"string","description":"Unit callsign"},"status":{"enum":["mobilized","deployed","retired"],"type":"string","additionalProperties":false,"description":"Unit status","default":"mobilized"},"tracking":{"type":"object","properties":{"uuid":{"$ref":"#/components/schemas/UUID"}},"description":"Unique id of tracking object created for this unit. Only writable on creation."},"transitions":{"type":"array","items":{"type":"object","additionalProperties":false,"properties":{"status":{"enum":["mobilized","deployed","retired"],"type":"string","additionalProperties":false,"description":"Unit status","default":"mobilized"},"timestamp":{"type":"string","description":"When transition occured","format":"date-time"}}},"description":"State transitions (read only)","readOnly":true},"personnels":{"type":"array","items":{"$ref":"#/components/schemas/UUID"},"description":"List of uuid of Personnels assigned to this unit"},"messages":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"List of messages added to Incident","readOnly":true}}},"Organisation":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"name":{"type":"string","description":"Organisation name"},"prefix":{"type":"string","description":"FleetMap prefix number"},"divisions":{"type":"array","items":{"$ref":"#/components/schemas/UUID"},"description":"List of division uuids"},"active":{"type":"boolean","description":"Organisation status"}},"description":"Organisation Schema (aggregate root)"},"DivisionTree":{"type":"object","properties":{"divisions":{"type":"array","items":{"$ref":"#/components/schemas/OrganisationTree"}}},"description":"List of OrganisationTree"},"OrganisationTree":{"type":"object","properties":{"name":{"type":"string","description":"Division name"},"suffix":{"type":"string","description":"FleetMap number suffix"},"active":{"type":"boolean","description":"Division status"},"departments":{"type":"array","items":{"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"name":{"type":"string","description":"Department name"},"suffix":{"type":"string","description":"FleetMap number suffix"},"active":{"type":"boolean","description":"Department status"}},"description":"Department Schema (aggregate root)"},"description":"List of Department"}}},"Division":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"organisation":{"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"}},"readOnly":true},"name":{"type":"string","description":"Division name"},"suffix":{"type":"string","description":"FleetMap suffix number"},"departments":{"type":"array","items":{"$ref":"#/components/schemas/UUID"},"description":"List of unique department uuids"},"active":{"type":"boolean","description":"Division status"}},"description":"Division Schema (aggregate root)"},"Department":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"division":{"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"}},"readOnly":true},"name":{"type":"string","description":"Department name"},"suffix":{"type":"string","description":"FleetMap suffix number"},"active":{"type":"boolean","description":"Department status"}},"description":"Department Schema (aggregate root)"},"Tracking":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"status":{"enum":["none","ready","tracking","paused","closed"],"type":"string","additionalProperties":false,"description":"Tracking status","default":"created","readOnly":false},"position":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Feature"],"type":"string","additionalProperties":false,"description":"GeoJSON Feature type"},"geometry":{"$ref":"#/components/schemas/Point"},"properties":{"type":"object","properties":{"name":{"type":"string","description":"Feature name"},"description":{"type":"string","description":"Feature description"},"timestamp":{"type":"string","description":"Timestamp in ISO8601 Date Time String Format","format":"date-time"},"source":{"enum":["manual","device","aggregate"],"type":"string","additionalProperties":false,"description":"Position source","default":"manual"},"activity":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["still","on_foot","walking","running","unknown","on_bicycle","in_vehicle"],"type":"string","additionalProperties":false,"description":"Activity tyep","default":"unknown"},"confidence":{"type":"integer","additionalProperties":false,"description":"Activity type confidence (0-100%)","default":"100"}},"description":"Activity Value Object"},"accuracy":{"type":"number","description":"Position accuracy"},"bearing":{"type":"number","description":"Bearing at given position in degrees"},"speed":{"type":"number","description":"Speed at given position in meter/seconds"}}}},"description":"Current position","readOnly":true},"distance":{"type":"number","description":"Total distance in meter","readOnly":true},"speed":{"type":"number","description":"Average speed in m/s","readOnly":true},"effort":{"type":"number","description":"Total effort in milliseconds","readOnly":true},"history":{"type":"array","items":{"$ref":"#/components/schemas/Position"},"additionalProperties":false,"description":"List of historical positions","readOnly":true},"sources":{"type":"array","items":{"$ref":"#/components/schemas/Source"},"description":"Array of Source objects","readOnly":false},"tracks":{"type":"array","items":{"$ref":"#/components/schemas/Track"},"description":"Array of Track objects","readOnly":false}},"description":"Tracking Schema (aggregate root)"},"TrackingStatus":{"enum":["none","ready","tracking","paused","closed"],"type":"string","additionalProperties":false,"default":"created"},"TrackingStatusRequest":{"type":"object","additionalProperties":false,"properties":{"status":{"enum":["tracking","paused"],"type":"string","additionalProperties":false,"default":"created"}},"description":"Tracking transition request","readOnly":true},"Source":{"required":["uuid","type"],"type":"object","properties":{"uuid":{"type":"string","description":"Foreign key to unique source identifier.","format":"uuid"},"type":{"enum":["device","trackable"],"type":"string","additionalProperties":false,"description":"Source type"}},"description":"Source Response"},"Track":{"required":["source"],"type":"object","additionalProperties":false,"properties":{"id":{"type":"string","description":"Track id (unique in Tracking only)","readOnly":true},"source":{"$ref":"#/components/schemas/Source"},"status":{"enum":["attached","detached"],"type":"string","additionalProperties":false,"description":"Track status","readOnly":true},"positions":{"type":"array","items":{"$ref":"#/components/schemas/Position"},"additionalProperties":false,"description":"List of sourced positions","readOnly":true}},"description":"Track Response"},"Device":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"$ref":"#/components/schemas/UUID"},"type":{"enum":["tetra","app","aprs","ais","spot","inreach"],"type":"string","additionalProperties":false,"description":"Device type"},"status":{"enum":["available","unavailable"],"type":"string","additionalProperties":false,"description":"Device status","default":"unavailable","readOnly":true},"alias":{"type":"string","description":"Device alias"},"number":{"type":"string","description":"Device number"},"network":{"type":"string","description":"Device network name"},"networkId":{"type":"string","description":"Device identifier on network"},"manual":{"type":"boolean","description":"Device registered manually","default":true},"trackable":{"type":"boolean","description":"Must be true for tracking","default":true},"position":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["Feature"],"type":"string","additionalProperties":false,"description":"GeoJSON Feature type"},"geometry":{"$ref":"#/components/schemas/Point"},"properties":{"type":"object","properties":{"name":{"type":"string","description":"Feature name"},"description":{"type":"string","description":"Feature description"},"timestamp":{"type":"string","description":"Timestamp in ISO8601 Date Time String Format","format":"date-time"},"source":{"enum":["manual","device","aggregate"],"type":"string","additionalProperties":false,"description":"Position source","default":"manual"},"activity":{"type":"object","additionalProperties":false,"properties":{"type":{"enum":["still","on_foot","walking","running","unknown","on_bicycle","in_vehicle"],"type":"string","additionalProperties":false,"description":"Activity tyep","default":"unknown"},"confidence":{"type":"integer","additionalProperties":false,"description":"Activity type confidence (0-100%)","default":"100"}},"description":"Activity Value Object"},"accuracy":{"type":"number","description":"Position accuracy"},"bearing":{"type":"number","description":"Bearing at given position in degrees"},"speed":{"type":"number","description":"Speed at given position in meter/seconds"}}}},"description":"Current position","readOnly":true},"allocatedTo":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Operation UUID","format":"uuid","readOnly":true},"type":{"type":"string","description":"Operation Type","default":"Operation","readOnly":true}},"description":"Operation which device is allocated to","readOnly":true},"transitions":{"type":"array","items":{"type":"object","additionalProperties":false,"properties":{"status":{"enum":["available","unavailable"],"type":"string","additionalProperties":false,"description":"Device status","default":"unavailable","readOnly":true},"timestamp":{"type":"string","description":"When transition occured","format":"date-time"}}},"description":"State transitions (read only)","readOnly":true},"messages":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"List of messages added to Device","readOnly":true}},"description":"Device Schema (aggregate root)"}},"responses":{"200":{"description":"OK. Indicates that the request has succeeded. A 200 response is cacheable by default. The meaning of a success depends on the HTTP request method."},"201":{"description":"Created. The POST-ed resource was created."},"204":{"description":"No Content. The resource was updated."},"400":{"description":"Bad request. Request contains wrong or is missing required data"},"401":{"description":"Unauthorized. The client must authenticate itself to get the requested response."},"403":{"description":"Forbidden. The client does not have access rights to the content."},"404":{"description":"Not found. The requested resource does not exist in server."},"405":{"description":"Method Not Allowed. The request method is known by the server but has been disabled and cannot be used."},"409":{"description":"Conflict. This response is sent when a request conflicts with the current state of the server."},"416":{"description":"Range Not Satisfiable. Indicates that a server cannot serve the requested ranges. The most likely reason is that the document doesn't contain such ranges, or that the Range header value, though syntactically correct, doesn't make sense."},"426":{"description":"Source or destination resource of a method is locked. Indicates that resource is read-only."},"429":{"description":"Too Many Requests. Indicates the user has sent too many requests in a given amount of time ('rate limiting'). A Retry-After header might be included to this response indicating how long to wait before making a new request."},"500":{"description":"Internal Server Error. indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. This error response is a generic 'catch-all' response"},"503":{"description":"Service unavailable. The server is currently unable to handle the request due to a temporary overloading or maintenance of the server. The implication is that this is a temporary condition which will be alleviated after some delay. If known, the length of the delay MAY be indicated in a Retry-After header."},"504":{"description":"Gateway Timeout server. Indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request."}},"parameters":{},"requestBodies":{},"headers":{},"securitySchemes":{"OpenId Connect":{"type":"openID","openIdConnectUrl":"https://id.discoos.io/auth/realms/DISCOOS/.well-known/openid-configuration"},"Passcode":{"type":"apiKey","description":"Authenticated users with an admin role is granted access to all objects and all available fields in each of these objects regardless of any affiliation or 'X-Passcode' given. All other roles are only granted access to objects if 'X-Passcode' is valid. Requests without header 'X-Passcode' or an invalid passcode will receive response `403 Forbidden`. Brute-force attacks are banned for a lmitied time without any feedback. When banned, all request will receive response `403 Forbidden` regardless of the value in 'X-Passcode'.","name":"X-Passcode","in":"header"}},"callbacks":{}}}
