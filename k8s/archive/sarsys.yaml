apiVersion: v1
kind: Namespace
metadata:
  name: sarsys
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sarsys-user
  namespace: sarsys
automountServiceAccountToken: false
---
apiVersion: v1
kind: Service
metadata:
  name: sarsys-app-server
  namespace: sarsys
spec:
  selector:
    app: sarsys-app-server
    role: backend
    type: api
  ports:
    - port: 80
      targetPort: 8082
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: sarsys-app-server
  namespace: sarsys
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefix
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  rules:
    - host: sarsys.app
      http:
        paths:
          - path: /api/
            backend:
              serviceName: sarsys-app-server
              servicePort: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sarsys-app-server-config
  namespace: sarsys
data:
  LEVEL: "INFO"
  DEBUG: "true"
  PREFIX: "test"
  TENANT: "discoos"
  EVENTSTORE_HOST: "http://eventstore.sarsys.svc.cluster.local"
  EVENTSTORE_PORT: "2113" 
  AUTH_ENABLED: "true"
  AUTH_AUDIENCE: "sarsys-web"
  AUTH_ISSUER: "https://id.discoos.io/auth/realms/DISCOOS"
  AUTH_BASE_URL: "https://id.discoos.io/auth/realms/DISCOOS"
  AUTH_ROLES_CLAIM: "roles"

---
apiVersion: v1
kind: Secret
metadata:
  name: sarsys-app-server-secrets
  namespace: sarsys
data:
  # echo -n 'admin' | openssl base64
  EVENTSTORE_LOGIN: YWRtaW4=
  # echo -n 'changeit' | openssl base64
  EVENTSTORE_PASSWORD: Y2hhbmdlaXQ=
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sarsys-app-server
  namespace: sarsys
  labels:
    app: sarsys-app-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sarsys-app-server
  template:
    metadata:
      labels:
        app: sarsys-app-server
        role: backend
        type: api
    spec:
      containers:
        - name: sarsys-app-server
          image: discoos/sarsys_app_server:latest
          # In development, setting `imagePullPolicy: Always` and using :latest tag is useful.
          imagePullPolicy: Always
          ports:
            - containerPort: 8082
          # Load configuration
          envFrom:
            - configMapRef:
                name: sarsys-app-server-config
            - secretRef:
                name: sarsys-app-server-secrets
          # Setup 'Downward API' - passed to
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              cpu: "250m"
              memory: "400Mi"
            limits:
              cpu: "500m"
              memory: "800Mi"
          readinessProbe:
            httpGet:
              path: /api/healthz
              port:  8082
              scheme: HTTP
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: /api/healthz
              port:  8082
              scheme: HTTP
            initialDelaySeconds: 30
      securityContext:
        runAsNonRoot: true
      serviceAccountName: sarsys-user
