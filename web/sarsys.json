{"openapi":"3.0.0","info":{"title":"SarSys App Server","description":"API consumed by SarSys apps","version":"0.0.1"},"servers":[{"url":"https://sarsys.app"},{"url":"http://localhost"}],"paths":{"/":{"parameters":[]},"/api/{path}":{"parameters":[{"name":"path","description":"This path variable may contain slashes '/' and may be empty.","in":"path","required":true,"schema":{"type":"string"}}],"get":{"summary":"Returns the contents of a file on the server's filesystem.","description":"Content-Type is determined by the suffix of the file.","operationId":"getFile","responses":{"200":{"description":"Successful file fetch.","content":{"*/*":{"schema":{"type":"string","format":"binary"}}}},"404":{"description":"No file exists at path."}}}},"/api/healthz":{"parameters":[],"get":{"tags":["Health"],"operationId":"check","parameters":[],"responses":{"200":{"description":"Successful response."}}}},"/api/messages/connect":{"parameters":[]},"/api/app-configs":{"parameters":[],"get":{"tags":["AppConfig"],"summary":"Get all AppConfigs","description":"Get all AppConfigs. This operation is only allowed for admin users.","operationId":"getAll","parameters":[{"name":"offset","description":"Start with [AppConfig] number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of [AppConfig] to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AppConfig"}}}}}}},"post":{"tags":["AppConfig"],"summary":"Create AppConfig","description":"Create AppConfig. The field [uuid] MUST BE unique for each application. Use a OS-spesific device id or a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"post","parameters":[],"requestBody":{"description":"New AppConfig","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppConfig"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/app-configs/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["AppConfig"],"summary":"Get AppConfig","description":"Get AppConfig. A configuration is unique for each application regardless of which user is logged in.","operationId":"getById","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppConfig"}}}}}},"patch":{"tags":["AppConfig"],"summary":"Update AppConfig","description":"Update AppConfig. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"patch","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update AppConfig. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppConfig"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/incidents":{"parameters":[],"get":{"tags":["Incident"],"summary":"Get all Incidents","description":"Get all Incidents. The actual incidents returned by this operation depends on which roles the authenticated user claims. User with admin a role will get all incidents containing all available fields. All other roles will get incidents based on affiliation. Which fields each incident contains is based on given passcode. All available fields are only returned for incidents  with passcode which match the value given in header 'X-Passcode'. Rquests without header 'X-Passcode', or with an invalid passcode, will get incidents containing fields [uuid] and [name] only. Brute-force attacks are banned for a lmitied time without any feedback. When banned, all incidents will contain fields [uuid] and [name] only, regardless of the value in 'X-Passcode'.","operationId":"getAll","parameters":[{"name":"offset","description":"Start with [Incident] number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of [Incident] to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Incident"}}}}}}},"post":{"tags":["Incident"],"summary":"Create Incident","description":"Create Incident. ","operationId":"post","parameters":[],"requestBody":{"description":"New Incident","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Incident"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/incidents/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Incident"],"summary":"Get Incident","description":"Get Incident. Response from this operation depends on which which roles the authenticated user claims.Admins are allowed to get any incident, all other roles are allowed to get incidents based on affiliation. Admins are allowed to get all incidents.","operationId":"getById","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Incident"}}}}}},"patch":{"tags":["Incident"],"summary":"Update Incident","description":"Update Incident. ","operationId":"patch","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Incident. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Incident"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}}},"components":{"schemas":{"AppConfig":{"type":"object","properties":{"uuid":{"type":"string","description":"Unique application id","format":"uuid"},"demo":{"type":"boolean","description":"Use demo-mode (no real data and any login)","default":true},"demoRole":{"enum":["Commander","UnitLeader","Personnel"],"type":"string","description":"Role of logged in user in demo-mode","default":"Commander"},"onboarding":{"type":"boolean","description":"Show onboarding before next login","default":true},"organization":{"type":"integer","description":"Default organization identifier","default":"61"},"division":{"type":"integer","description":"Default division identifier","default":"140"},"department":{"type":"integer","description":"Default department identifier","default":"141"},"talkGroupCatalog":{"type":"string","description":"Default talkgroup name","default":"Oslo"},"storage":{"type":"boolean","description":"Storage access is granted","default":false},"locationWhenInUse":{"type":"boolean","description":"Location access when app is in use is granted","default":false},"mapCacheTTL":{"type":"integer","description":"Number of days downloaded map tiles are cached locally","default":30},"mapCacheCapacity":{"type":"integer","description":"Maximum number map tiles cached locally","default":15000},"locationAccuracy":{"enum":["lowest","low","medium","high","best","bestForNavigation"],"type":"string","description":"Requested location accuracy","default":"high"},"locationFastestInterval":{"type":"integer","description":"Fastest interval between location updates in milliseconds","default":1000},"locationSmallestDisplacement":{"type":"integer","description":"Smallest displacment in meters before update is received","default":3},"keepScreenOn":{"type":"boolean","description":"Keep screen on when maps are displayed","default":false},"callsignReuse":{"type":"boolean","description":"Reuse callsigns for retired units","default":true},"sentryDns":{"type":"string","description":"Sentry DNS for remote error reporting","format":"uri","default":"https://2d6130375010466b9652b9e9efc415cc@sentry.io/1523681"}},"description":"SarSys application configuration"},"Incident":{"required":["uuid","name","type","status","occured","created","updated","justification","ipp","meetup"],"type":"object","properties":{"uuid":{"type":"string","description":"Unique incident id","format":"uuid"},"name":{"type":"boolean","description":"Name of incident scene"},"type":{"enum":["lost","distress","other"],"type":"string","description":"Incident type"},"status":{"enum":["registered","handling","closed"],"type":"string","description":"Incident status"},"resolution":{"enum":["cancelled","resolved"],"type":"string","description":"Incident resolution"},"occurred":{"type":"string","description":"Date and time the incident occurred in ISO8601 Date Time String Format","format":"date-time"},"created":{"type":"string","description":"Date and time the incident was registered in ISO8601 Date Time String Format","format":"date-time"},"changed":{"type":"string","description":"Date and time the incident was last changed in ISO8601 Date Time String Format","format":"date-time"},"reference":{"type":"string","description":"External reference from requesting authority"},"justification":{"type":"string","description":"Justification for registering the incident"},"talkGroups":{"type":"array","items":{"$ref":"#/components/schemas/TalkGroup"},"description":"List of talk gropus in used"},"ipp":{"$ref":"#/components/schemas/Location"},"meetup":{"$ref":"#/components/schemas/Location"}}},"TalkGroup":{"required":["name","type"],"type":"object","properties":{"name":{"type":"boolean","description":"Talkgroup identifier"},"type":{"enum":["tetra","marine","analog"],"type":"string","description":"Talkgroup type"}},"description":"TalkGroup Schema"},"Location":{"required":["point"],"type":"object","properties":{"point":{"type":"array","items":{"$ref":"#/components/schemas/Point"},"description":"Location position"},"address":{"type":"array","items":{"$ref":"#/components/schemas/Address"},"description":"Location address"},"description":{"type":"string","description":"Location description"}},"description":"Location Schema"},"Point":{"required":["lat","lon","timestamp"],"type":"object","properties":{"lat":{"type":"number","description":"Latitude in decimal degrees"},"lon":{"type":"number","description":"Longitude in decimal degrees"},"alt":{"type":"number","description":"Altitude above sea level in meters"},"acc":{"type":"number","description":"Accuracy in meters"},"timestamp":{"type":"string","description":"Timestamp in ISO8601 Date Time String Format","format":"date-time"},"type":{"enum":["manual","device","personnel","aggregated"],"type":"string","description":"Point type"}},"description":"Point Schema"},"Address":{"required":["lat","lon","timestamp"],"type":"object","properties":{"lines":{"type":"string","items":{"type":"string"},"description":"Pass codes for authorizing access to incident data"},"city":{"type":"string","description":"City name"},"postalCode":{"type":"string","description":"Postal, state or zip code"},"countryCode":{"type":"string","description":"ISO 3166 country code"}},"description":"Point Schema"},"PassCodes":{"required":["commander","personnel"],"type":"object","properties":{"commander":{"type":"string","description":"Passcode for access with Commander rights"},"personnel":{"type":"string","description":"Passcode for access with Personnel right"}},"description":"Pass codes for access rights to spesific Incident instance"}},"responses":{"201":{"description":"Created. The POST-ed resource was created."},"204":{"description":"No Content. The resource was updated."},"400":{"description":"Bad request. Request contains wrong or is missing required data"},"401":{"description":"Unauthorized. The client must authenticate itself to get the requested response."},"403":{"description":"Forbidden. The client does not have access rights to the content."},"404":{"description":"Not found. The requested resource does not exist in server."},"405":{"description":"Method Not Allowed. The request method is known by the server but has been disabled and cannot be used."},"409":{"description":"Conflict. This response is sent when a request conflicts with the current state of the server."},"503":{"description":"Service unavailable. The server is not ready to handle the request. Common causes are a server that is down for maintenance or that is overloaded."},"InsufficientScope":{"description":"The provided credentials or bearer token have insufficient permission to access this route.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string"},"scope":{"type":"string","description":"The required scope for this operation."}}}}}},"InsufficientAccess":{"description":"The provided credentials or bearer token are not authorized for this request.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string"}}}}}},"MalformedAuthorizationHeader":{"description":"The provided Authorization header was malformed.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string"}}}}}}},"parameters":{},"requestBodies":{},"headers":{},"securitySchemes":{"id.discoos.io":{"type":"openID","description":"This endpoint requires an identity token passed issed from https://id.discoos.io as a [Bearer token](https://swagger.io/docs/specification/authentication/bearer-authentication/) issued by in an [Authorization header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization).","openIdConnectUrl":"https://id.discoos.io"}},"callbacks":{}}}
