{"openapi":"3.0.0","info":{"title":"SarSys App Server","description":"API consumed by SarSys apps","version":"0.0.1"},"servers":[{"url":"https://sarsys.app"},{"url":"http://localhost"}],"paths":{"/":{"parameters":[]},"/api/{path}":{"parameters":[{"name":"path","description":"This path variable may contain slashes '/' and may be empty.","in":"path","required":true,"schema":{"type":"string"}}],"get":{"summary":"Returns the contents of a file on the server's filesystem.","description":"Content-Type is determined by the suffix of the file.","operationId":"getFile","responses":{"200":{"description":"Successful file fetch.","content":{"*/*":{"schema":{"type":"string","format":"binary"}}}},"404":{"description":"No file exists at path."}}}},"/api/healthz":{"parameters":[],"get":{"tags":["Health"],"operationId":"check","parameters":[],"responses":{"200":{"description":"Successful response."}}}},"/api/messages/connect":{"parameters":[]},"/api/app-configs":{"parameters":[],"get":{"tags":["AppConfig"],"summary":"Get all appconfigs","description":"Get all appconfigs. This operation is only allowed for admin users.","operationId":"getAll","parameters":[{"name":"offset","description":"Start with [AppConfig] number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of [AppConfig] to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AppConfig"}}}}}}},"post":{"tags":["AppConfig"],"summary":"Create appconfig","description":"Create appconfig. The field [uuid] MUST BE unique for each application. Use a OS-spesific device id or a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New AppConfig","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppConfig"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/app-configs/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["AppConfig"],"summary":"Get appconfig","description":"Get appconfig. A configuration is unique for each application regardless of which user is logged in.","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppConfig"}}}}}},"patch":{"tags":["AppConfig"],"summary":"Update appconfig","description":"Update appconfig. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update AppConfig. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppConfig"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}},"delete":{"tags":["AppConfig"],"description":"null. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"}}}},"/api/incidents":{"parameters":[],"get":{"tags":["Incident"],"summary":"Get all incidents","description":"Get all incidents. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with [Incident] number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of [Incident] to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Incident"}}}}}}},"post":{"tags":["Incident"],"summary":"Create incident","description":"Create incident. The field [uuid] MUST BE unique for each Incident. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New Incident","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Incident"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/incidents/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Incident"],"summary":"Get incident","description":"Get incident. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Incident"}}}}}},"patch":{"tags":["Incident"],"summary":"Update incident","description":"Update incident. Only fields in request are applied to Incident. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Incident. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Incident"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}},"delete":{"tags":["Incident"],"description":"null. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"}}}},"/api/subjects":{"parameters":[],"get":{"tags":["Subject"],"summary":"Get all subjects","description":"Get all subjects. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with [Subject] number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of [Subject] to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Subject"}}}}}}},"post":{"tags":["Subject"],"summary":"Create subject","description":"Create subject. The field [uuid] MUST BE unique for each Subject. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New Subject","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subject"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/subjects/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Subject"],"summary":"Get subject","description":"Get subject. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subject"}}}}}},"patch":{"tags":["Subject"],"summary":"Update subject","description":"Update subject. Only fields in request are applied to Subject. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Subject. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subject"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}},"delete":{"tags":["Subject"],"description":"null. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"}}}},"/api/incidents/{uuid}/clues":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Clue"],"summary":"Get all clues","description":"Get all clues. ","operationId":"getAll","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Clue"}}}}}},"post":{"tags":["Clue"],"summary":"Create clue","description":"Create clue. The field [uuid] MUST BE unique for each incident. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Clue","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Clue"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/incidents/{uuid}/clues/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Clue"],"summary":"Get clue","description":"Get clue. ","operationId":"getById","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Clue"}}}}}},"patch":{"tags":["Clue"],"summary":"Update clue","description":"Update clue. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"requestBody":{"description":"Update Clue. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Clue"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}},"delete":{"tags":["Clue"],"summary":"Delete clue","description":"Delete clue. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"}}}},"/api/operations":{"parameters":[],"get":{"tags":["Operation"],"summary":"Get all operations","description":"Get all operations. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with [Operation] number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of [Operation] to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Operation"}}}}}}},"post":{"tags":["Operation"],"summary":"Create operation","description":"Create operation. The field [uuid] MUST BE unique for each Operation. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New Operation","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operation"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/operations/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Operation"],"summary":"Get operation","description":"Get operation. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operation"}}}}}},"patch":{"tags":["Operation"],"summary":"Update operation","description":"Update operation. Only fields in request are applied to Operation. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Operation. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operation"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}},"delete":{"tags":["Operation"],"description":"null. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"}}}},"/api/operations/{uuid}/objectives":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Objective"],"summary":"Get all objectives","description":"Get all objectives. ","operationId":"getAll","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Objective"}}}}}},"post":{"tags":["Objective"],"summary":"Create objective","description":"Create objective. The field [uuid] MUST BE unique for each incident. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New Objective","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Objective"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/operations/{uuid}/objectives/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Objective"],"summary":"Get objective","description":"Get objective. ","operationId":"getById","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Objective"}}}}}},"patch":{"tags":["Objective"],"summary":"Update objective","description":"Update objective. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"requestBody":{"description":"Update Objective. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Objective"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}},"delete":{"tags":["Objective"],"summary":"Delete objective","description":"Delete objective. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"}}}},"/api/operations/{uuid}/talkgroups":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["TalkGroup"],"summary":"Get all talkgroups","description":"Get all talkgroups. ","operationId":"getAll","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TalkGroup"}}}}}},"post":{"tags":["TalkGroup"],"summary":"Create talkgroup","description":"Create talkgroup. The field [uuid] MUST BE unique for each incident. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"New TalkGroup","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TalkGroup"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/operations/{uuid}/talkgroups/{id}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["TalkGroup"],"summary":"Get talkgroup","description":"Get talkgroup. ","operationId":"getById","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TalkGroup"}}}}}},"patch":{"tags":["TalkGroup"],"summary":"Update talkgroup","description":"Update talkgroup. Only fields in request are updated. Existing values WILL BE overwritten, others remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"requestBody":{"description":"Update TalkGroup. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TalkGroup"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}},"delete":{"tags":["TalkGroup"],"summary":"Delete talkgroup","description":"Delete talkgroup. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"}}}},"/api/missions":{"parameters":[],"get":{"tags":["Mission"],"summary":"Get all missions","description":"Get all missions. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with [Mission] number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of [Mission] to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Mission"}}}}}}},"post":{"tags":["Mission"],"summary":"Create mission","description":"Create mission. The field [uuid] MUST BE unique for each Mission. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New Mission","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Mission"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/missions/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Mission"],"summary":"Get mission","description":"Get mission. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Mission"}}}}}},"patch":{"tags":["Mission"],"summary":"Update mission","description":"Update mission. Only fields in request are applied to Mission. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Mission. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Mission"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}},"delete":{"tags":["Mission"],"description":"null. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"}}}},"/api/personnels":{"parameters":[],"get":{"tags":["Personnel"],"summary":"Get all personnels","description":"Get all personnels. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with [Personnel] number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of [Personnel] to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Personnel"}}}}}}},"post":{"tags":["Personnel"],"summary":"Create personnel","description":"Create personnel. The field [uuid] MUST BE unique for each Personnel. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New Personnel","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Personnel"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/personnels/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Personnel"],"summary":"Get personnel","description":"Get personnel. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Personnel"}}}}}},"patch":{"tags":["Personnel"],"summary":"Update personnel","description":"Update personnel. Only fields in request are applied to Personnel. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Personnel. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Personnel"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}},"delete":{"tags":["Personnel"],"description":"null. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"}}}},"/api/units":{"parameters":[],"get":{"tags":["Unit"],"summary":"Get all units","description":"Get all units. ","operationId":"getAll","parameters":[{"name":"offset","description":"Start with [Unit] number equal to offset. Default is 0.","in":"query"},{"name":"limit","description":"Maximum number of [Unit] to fetch. Default is 20.","in":"query"}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Unit"}}}}}}},"post":{"tags":["Unit"],"summary":"Create unit","description":"Create unit. The field [uuid] MUST BE unique for each Unit. Use a [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier).","operationId":"create","parameters":[],"requestBody":{"description":"New Unit","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unit"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"201":{"$ref":"#/components/responses/201"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}}},"/api/units/{uuid}":{"parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"get":{"tags":["Unit"],"summary":"Get unit","description":"Get unit. ","operationId":"getByUuid","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"200":{"description":"Successful response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unit"}}}}}},"patch":{"tags":["Unit"],"summary":"Update unit","description":"Update unit. Only fields in request are applied to Unit. Other values remain unchanged.","operationId":"update","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update Unit. Only fields in request are updated.","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Unit"}}}},"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"},"204":{"$ref":"#/components/responses/204"},"400":{"$ref":"#/components/responses/400"},"409":{"$ref":"#/components/responses/409"},"503":{"$ref":"#/components/responses/503"}}},"delete":{"tags":["Unit"],"description":"null. ","operationId":"delete","parameters":[{"name":"uuid","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"401":{"$ref":"#/components/responses/401"},"403":{"$ref":"#/components/responses/403"}}}}},"components":{"schemas":{"PassCodes":{"required":["commander","personnel"],"type":"object","additionalProperties":false,"properties":{"commander":{"type":"string","description":"Passcode for access with Commander rights"},"personnel":{"type":"string","description":"Passcode for access with Personnel rights"}},"description":"Pass codes for access rights to spesific Incident instance"},"AppConfig":{"required":["uuid"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Unique application id","format":"uuid"},"demo":{"type":"boolean","description":"Use demo-mode (no real data and any login)","default":true},"demoRole":{"enum":["commander","unitleader","personnel"],"type":"string","description":"Role of logged in user in demo-mode","default":"Commander"},"onboarding":{"type":"boolean","description":"Show onboarding before next login","default":true},"organization":{"type":"string","description":"Default organization identifier","default":"61"},"division":{"type":"string","description":"Default division identifier","default":"140"},"department":{"type":"string","description":"Default department identifier","default":"141"},"talkGroupCatalog":{"type":"string","description":"Default talkgroup name","default":"Oslo"},"storage":{"type":"boolean","description":"Storage access is granted","default":false},"locationWhenInUse":{"type":"boolean","description":"Location access when app is in use is granted","default":false},"mapCacheTTL":{"type":"integer","description":"Number of days downloaded map tiles are cached locally","default":30},"mapCacheCapacity":{"type":"integer","description":"Maximum number map tiles cached locally","default":15000},"locationAccuracy":{"enum":["lowest","low","medium","high","best","bestForNavigation"],"type":"string","description":"Requested location accuracy","default":"high"},"locationFastestInterval":{"type":"integer","description":"Fastest interval between location updates in milliseconds","default":1000},"locationSmallestDisplacement":{"type":"integer","description":"Smallest displacment in meters before update is received","default":3},"keepScreenOn":{"type":"boolean","description":"Keep screen on when maps are displayed","default":false},"callsignReuse":{"type":"boolean","description":"Reuse callsigns for retired units","default":true},"sentryDns":{"type":"string","description":"Sentry DNS for remote error reporting","format":"uri","default":"https://2d6130375010466b9652b9e9efc415cc@sentry.io/1523681"}},"description":"SarSys application configuration"},"Incident":{"required":["uuid","name","summary","type","status","resolution","occured"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Unique incident id","format":"uuid"},"name":{"type":"string","description":"Name of incident scene"},"summary":{"type":"string","description":"Situation summary"},"type":{"enum":["lost","distress","disaster","other"],"type":"string","description":"Incident type"},"status":{"enum":["registered","handling","closed"],"type":"string","description":"Incident status","default":"registered"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","description":"Incident resolution","default":"unresolved"},"transitions":{"type":"array","items":{"type":"object","properties":{"status":{"enum":["registered","handling","closed"],"type":"string","description":"Incident status","default":"registered"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","description":"Incident resolution","default":"unresolved"},"timestamp":{"type":"string","description":"When transition occured","format":"date-time"}}},"additionalProperties":false,"description":"State transitions (read only)","readOnly":true},"occurred":{"type":"string","description":"When Incident occurred","format":"date-time"},"clues":{"type":"array","items":{"$ref":"#/components/schemas/Clue"},"description":"List of Clues for planning and response"},"subjects":{"type":"array","items":{"$ref":"#/components/schemas/Subject"},"description":"List of Subjects involved in the incident"},"operations":{"type":"array","items":{"$ref":"#/components/schemas/Operation"},"description":"List of Operations handling this Incident"},"passcodes":{"$ref":"#/components/schemas/PassCodes"}}},"Subject":{"required":["uuid","name","type","situation","location"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Unique Subject id","format":"uuid"},"name":{"type":"string","description":"Subject name"},"situation":{"type":"string","description":"Subject situation"},"type":{"enum":["person","vehicle","other"],"type":"string","description":"Subject type"},"location":{"$ref":"#/components/schemas/Location"}},"description":"Objective Schema"},"Clue":{"required":["name","type","quality"],"type":"object","additionalProperties":false,"properties":{"id":{"type":"integer","description":"Clue id (unique in Incident only)"},"name":{"type":"string","description":"Clue name"},"description":{"type":"string","description":"Clue description"},"type":{"enum":["find","condition","observation","circumstance"],"type":"string","description":"Clue type"},"quality":{"enum":["confirmed","plausable","possible","unlikely","rejected"],"type":"string","description":"Clue quality assessment"},"location":{"type":"array","items":{"$ref":"#/components/schemas/Location"},"description":"Rescue or assitance location"}},"description":"Objective Schema"},"Operation":{"required":["uuid","incidentUuid","name","type","ipp","meetup","justification"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Unique Operation id","format":"uuid"},"name":{"type":"string","description":"Name of operation scene"},"type":{"enum":["search","rescue","other"],"type":"string","description":"Operation type"},"status":{"enum":["planned","enroute","onscene","finished"],"type":"string","description":"Operation status","default":"planned"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","description":"Operation resolution","default":"unresolved"},"transitions":{"type":"array","items":{"type":"object","properties":{"status":{"enum":["planned","enroute","onscene","finished"],"type":"string","description":"Operation status","default":"planned"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","description":"Operation resolution","default":"unresolved"},"timestamp":{"type":"string","description":"When transition occured","format":"date-time"}}},"additionalProperties":false,"description":"State transitions (read only)","readOnly":true},"reference":{"type":"string","description":"External reference from requesting authority"},"justification":{"type":"string","description":"Justification for responding"},"talkgroups":{"type":"array","items":{"$ref":"#/components/schemas/TalkGroup"},"description":"List of talk gropus in use"},"ipp":{"$ref":"#/components/schemas/Location"},"meetup":{"$ref":"#/components/schemas/Location"},"objectives":{"type":"array","items":{"$ref":"#/components/schemas/Objective"},"description":"List of Operation objectives"},"passcodes":{"$ref":"#/components/schemas/PassCodes"}}},"Point":{"required":["lat","lon","timestamp"],"type":"object","additionalProperties":false,"properties":{"lat":{"type":"number","description":"Latitude in decimal degrees"},"lon":{"type":"number","description":"Longitude in decimal degrees"},"alt":{"type":"number","description":"Altitude above sea level in meters"},"acc":{"type":"number","description":"Accuracy in meters"},"timestamp":{"type":"string","description":"Timestamp in ISO8601 Date Time String Format","format":"date-time"},"type":{"enum":["manual","device","personnel","aggregated"],"type":"string","description":"Point type"}},"description":"Point Schema (value object)"},"Address":{"required":["lat","lon","timestamp"],"type":"object","additionalProperties":false,"properties":{"lines":{"type":"string","items":{"type":"string"},"description":"Pass codes for authorizing access to Operation data"},"city":{"type":"string","description":"City name"},"postalCode":{"type":"string","description":"Postal, state or zip code"},"countryCode":{"type":"string","description":"ISO 3166 country code"}},"description":"Point Schema (value object)"},"Location":{"required":["point"],"type":"object","additionalProperties":false,"properties":{"point":{"type":"array","items":{"$ref":"#/components/schemas/Point"},"description":"Location position"},"address":{"type":"array","items":{"$ref":"#/components/schemas/Address"},"description":"Location address"},"description":{"type":"string","description":"Location description"}},"description":"Location Schema (value object)"},"Objective":{"required":["name","type","resolution"],"type":"object","additionalProperties":false,"properties":{"id":{"type":"integer","description":"Objective id (unique in Operation only)"},"name":{"type":"array","items":{"$ref":"#/components/schemas/Point"},"description":"Objective name"},"description":{"type":"string","description":"Objective description"},"type":{"enum":["locate","rescue","assist"],"type":"string","description":"Objective type"},"location":{"type":"array","items":{"$ref":"#/components/schemas/Location"},"description":"Rescue or assitance location"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","description":"Objective resolution","default":"unresolved"}},"description":"Objective Schema (entity object)"},"TalkGroup":{"required":["id","name","type"],"type":"object","additionalProperties":false,"properties":{"id":{"type":"integer","description":"TalkGroup id (unique in Operation only)"},"name":{"type":"boolean","description":"Talkgroup name"},"type":{"enum":["tetra","marine","analog"],"type":"string","description":"Talkgroup type"}},"description":"TalkGroup Schema (value object)"},"Mission":{"required":["uuid","type"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Unique Mission id","format":"uuid"},"description":{"type":"string","description":"Mission description"},"type":{"enum":["search","rescue","other"],"type":"string","description":"Mission type"},"status":{"enum":["created","planned","assigned","executed"],"type":"string","description":"Mission status","default":"created"},"priority":{"enum":["highest","high","medium","low","lowest"],"type":"string","description":"Mission priority","default":"medium"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","description":"Mission status","default":"unresolved"},"transitions":{"type":"array","items":{"type":"object","properties":{"status":{"enum":["created","planned","assigned","executed"],"type":"string","description":"Mission status","default":"created"},"resolution":{"enum":["unresolved","cancelled","duplicate","resolved"],"type":"string","description":"Mission status","default":"unresolved"},"timestamp":{"type":"string","description":"When transition occured","format":"date-time"}}},"additionalProperties":false,"description":"State transitions (read only)","readOnly":true},"assignedTo":{"type":"string","description":"Uuid of unit assigned to mission","format":"uuid"}}},"Personnel":{"required":["uuid","fname","lname","status"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Unique Personnel id","format":"uuid"},"fname":{"type":"string","description":"First name"},"lname":{"type":"string","description":"Last name"},"phone":{"type":"string","description":"Phone number"},"status":{"enum":["mobilized","deployed","retired"],"type":"string","description":"Personnel status","default":"mobilized"},"transitions":{"type":"array","items":{"type":"object","properties":{"status":{"enum":["mobilized","deployed","retired"],"type":"string","description":"Personnel status","default":"mobilized"},"timestamp":{"type":"string","description":"When transition occured","format":"date-time"}}},"additionalProperties":false,"description":"State transitions (read only)","readOnly":true}}},"Unit":{"required":["uuid","type","status","number","callsign"],"type":"object","additionalProperties":false,"properties":{"uuid":{"type":"string","description":"Unique Personnel id","format":"uuid"},"type":{"enum":["team","k9","boat","vehicle","snowmobile","atv","commandpost","other"],"type":"string","description":"Unit type"},"number":{"type":"integer","description":"Unit number"},"phone":{"type":"string","description":"Unit phone number"},"callsign":{"type":"string","description":"Unit callsign"},"status":{"enum":["mobilized","deployed","retired"],"type":"string","description":"Unit status","default":"mobilized"},"transitions":{"type":"array","items":{"type":"object","properties":{"status":{"enum":["mobilized","deployed","retired"],"type":"string","description":"Unit status","default":"mobilized"},"timestamp":{"type":"string","description":"When transition occured","format":"date-time"}}},"additionalProperties":false,"description":"State transitions (read only)","readOnly":true},"personnel":{"type":"array","items":{"type":"string"},"description":"List of uuid of Unit assigned to this unit","format":"uuid"}}}},"responses":{"201":{"description":"Created. The POST-ed resource was created."},"204":{"description":"No Content. The resource was updated."},"400":{"description":"Bad request. Request contains wrong or is missing required data"},"401":{"description":"Unauthorized. The client must authenticate itself to get the requested response."},"403":{"description":"Forbidden. The client does not have access rights to the content."},"404":{"description":"Not found. The requested resource does not exist in server."},"405":{"description":"Method Not Allowed. The request method is known by the server but has been disabled and cannot be used."},"409":{"description":"Conflict. This response is sent when a request conflicts with the current state of the server."},"503":{"description":"Service unavailable. The server is not ready to handle the request. Common causes are a server that is down for maintenance or that is overloaded."},"InsufficientScope":{"description":"The provided credentials or bearer token have insufficient permission to access this route.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string"},"scope":{"type":"string","description":"The required scope for this operation."}}}}}},"InsufficientAccess":{"description":"The provided credentials or bearer token are not authorized for this request.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string"}}}}}},"MalformedAuthorizationHeader":{"description":"The provided Authorization header was malformed.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string"}}}}}}},"parameters":{},"requestBodies":{},"headers":{},"securitySchemes":{"id.discoos.org":{"type":"openID","description":"This endpoint requires an identity token issed from https://id.discoos.io passed as a [Bearer token](https://swagger.io/docs/specification/authentication/bearer-authentication/) issued by in an [Authorization header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization).","openIdConnectUrl":"https://id.discoos.io/auth/realms/DISCOOS/.well-known/openid-configuration"},"Passcode":{"type":"apiKey","description":"Authenticed users with an admin role is granted access to all objects and all available fields in each of these objects regardless of any affiliation or 'X-Passcode' given. All other roles are only granted access to objects if 'X-Passcode' is valid. Requests without header 'X-Passcode' or an invalid passcode will receive response `403 Forbidden`. Brute-force attacks are banned for a lmitied time without any feedback. When banned, all request will receive response `403 Forbidden` regardless of the value in 'X-Passcode'.","name":"X-Passcode","in":"header"}},"callbacks":{}}}
